<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wanhutong.backend.modules.sys.dao.OfficeDao">

	<sql id="officeColumns">
		a.id,
		a.parent_id AS "parent.id",
		a.parent_ids,
		a.area_id AS "area.id",
		a.code,
		a.name,
		a.sort,
		a.type,
		a.grade,
		a.address, 
		a.zip_code, 
		a.master, 
		a.phone, 
		a.fax, 
		a.email, 
		a.remarks,
		a.create_id AS "createBy.id",
		a.create_date,
		a.update_id AS "updateBy.id",
		a.update_date,
		a.status,
		a.useable AS useable,
		a.primary_person AS "primaryPerson.id",
		a.deputy_person AS "deputyPerson.id",
		p.name AS "parent.name",
		ar.name AS "area.name",
		ar.parent_ids AS "area.parentIds",
		pp.name AS "primaryPerson.name",
		dp.name AS "deputyPerson.name"
	</sql>

	<sql id="officeJoins">
		LEFT JOIN sys_office p ON p.id = a.parent_id
		LEFT JOIN sys_area ar ON ar.id = a.area_id
		LEFT JOIN sys_user pp ON pp.id = a.primary_person
		LEFT JOIN sys_user dp ON dp.id = a.deputy_person
		LEFT JOIN biz_custom_center_consultant ccc on a.id=ccc.cust_id
    </sql>

	<select id="get" resultType="Office">
		SELECT
		<include refid="officeColumns"/>
		FROM sys_office a
		<include refid="officeJoins"/>
		WHERE a.id = #{id}
	</select>

	<!--<select id="findList" resultType="Office">-->
	<!--SELECT-->
	<!--<include refid="officeColumns"/>-->
	<!--FROM sys_office a-->
	<!--<include refid="officeJoins"/>-->
	<!--WHERE a.status = #{DEL_FLAG_NORMAL}-->
	<!--<if test="primaryPerson!=null and primaryPerson.id!=null and primaryPerson.id!=''">-->
	<!--a.primary_person=#{primaryPerson.id}-->
	<!--</if>-->
	<!--&lt;!&ndash; 数据范围过滤 &ndash;&gt;-->
	<!--${sqlMap.dsf}-->
	<!--OR a.id = #{currentUser.office.id}-->
	<!--ORDER BY a.code-->
	<!--</select>-->

	<select id="findAllList" resultType="Office">
		SELECT
		<include refid="officeColumns"/>
		FROM sys_office a
		<include refid="officeJoins"/>
		WHERE a.status = #{DEL_FLAG_NORMAL}
		ORDER BY a.code
	</select>

	<select id="findByParentIdsLike" resultType="Office">
		SELECT
		<include refid="officeColumns"/>
		FROM sys_office a
		<include refid="officeJoins"/>
		WHERE a.status = #{DEL_FLAG_NORMAL} AND a.parent_ids LIKE #{parentIds}
		<!-- 数据范围过滤 -->
		-- 		${sqlMap.dsf}
		ORDER BY a.code
	</select>

	<select id="findOfficeByIdToParent" resultType="Office">
		select *
		from sys_office a
		where FIND_IN_SET(id,
		(select GROUP_CONCAT(distinct parent_ids,'0')
		from biz_custom_center_consultant ccc, sys_office so
		where ccc.cust_id = so.id and ccc.status=1
		<if test="customs != null and customs.id != null and customs.id != ''">
			AND ccc.cust_id = #{customs.id}
		</if>
		<if test="centers != null and centers.id != null and centers.id != ''">
			AND ccc.center_id = #{centers.id}
		</if>
		<if test="consultants != null and consultants.id != null and consultants.id != ''">
			AND ccc.consultant_id = #{consultants.id}
		</if>
		))
		union all
		select so.*
		from biz_custom_center_consultant ccc, sys_office so
		where ccc.cust_id = so.id and so.status=1 and  ccc.status=1
		<if test="customs != null and customs.id != null and customs.id != ''">
			AND ccc.cust_id = #{customs.id}
		</if>
		<if test="centers != null and centers.id != null and centers.id != ''">
			AND ccc.center_id = #{centers.id}
		</if>
		<if test="consultants != null and consultants.id != null and consultants.id != ''">
			AND ccc.consultant_id = #{consultants.id}
		</if>
		<if test="parentIds!=null and parentIds !=''">
			AND so.parent_ids LIKE #{parentIds}
		</if>
		order by parent_ids
	</select>

	<select id="findOfficeCustByIdToParent" resultType="Office">
		SELECT
		*
		FROM
		sys_office a
		WHERE
		FIND_IN_SET(
		id,
		(
		SELECT
		GROUP_CONCAT(distinct parent_ids, '0' )
		FROM
		sys_office so
		WHERE so.status = #{DEL_FLAG_NORMAL}
		<if test="type != null and type != ''">
			AND so.type = #{type}
		</if>
		AND NOT EXISTS ( SELECT ccc.cust_id FROM biz_custom_center_consultant ccc WHERE ccc.cust_id = so.id and ccc.status=1)
		)
		) UNION ALL
		SELECT
		so.*
		FROM
		sys_office so
		WHERE
		so.status = #{DEL_FLAG_NORMAL}
		<if test="type != null and type != ''">
			AND so.type = #{type}
		</if>
		AND NOT EXISTS ( SELECT ccc.cust_id FROM biz_custom_center_consultant ccc WHERE ccc.cust_id = so.id and ccc.status=1)

	</select>

	<select id="findListByType" resultType="Office">
		select *
		from sys_office
		where type = #{type}
		and status = 1;
	</select>

	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO sys_office(
			id,
			parent_id,
			parent_ids,
			area_id,
			code,
			name,
			sort,
			type,
			grade,
			address,
			zip_code,
			master,
			phone,
			fax,
			email,
			create_id,
			create_date,
			update_id,
			update_date,
			remarks,
			status,
			useable,
			primary_person,
			deputy_person
		) VALUES (
			#{id},
			#{parent.id},
			#{parentIds},
			#{area.id},
			#{code},
			#{name},
			#{sort},
			#{type},
			#{grade},
			#{address},
			#{zipCode},
			#{master},
			#{phone},
			#{fax},
			#{email},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag},
			#{useable},
			#{primaryPerson.id},
			#{deputyPerson.id}
		)
	</insert>

	<update id="update">
		UPDATE sys_office SET
			parent_id = #{parent.id},
			parent_ids = #{parentIds},
			area_id = #{area.id},
			code = #{code},
			name = #{name},
			type = #{type},
			grade = #{grade},
			address = #{address},
			zip_code = #{zipCode},
			master = #{master},
			phone = #{phone},
			fax = #{fax},
			email = #{email},
			update_id = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks},
			useable=#{useable},
			primary_person=#{primaryPerson.id},
			deputy_person=#{deputyPerson.id}
		WHERE id = #{id}
	</update>

	<update id="updateParentIds">
		UPDATE sys_office SET
			parent_id = #{parent.id},
			parent_ids = #{parentIds}
		WHERE id = #{id}
	</update>

	<update id="delete">
		UPDATE sys_office SET
		status = #{DEL_FLAG_DELETE}
		WHERE id = #{id} OR parent_ids LIKE
		<if test="dbName == 'oracle'">'%,'||#{id}||',%'</if>
		<if test="dbName == 'mssql'">'%,'+#{id}+',%'</if>
		<if test="dbName == 'mysql'">CONCAT('%,', #{id}, ',%')</if>
	</update>

	<select id="queryList" resultType="Office">
		SELECT
		<include refid="officeColumns"/>
		FROM sys_office a
		<include refid="officeJoins"/>
		WHERE
		a.status = #{DEL_FLAG_NORMAL}
		<if test="type != null and type != ''">
			AND a.type = #{type}
			<if test="customerTypeTen != null and customerTypeTen != ''">
				or a.type=#{customerTypeTen}
			</if>
			<if test="customerTypeEleven != null and customerTypeEleven != ''">
				or a.type=#{customerTypeEleven}
			</if>
		</if>
		<if test="name != null and name != ''">
			AND a.name = #{name}
		</if>
		<if test="parent != null and parent.id != null">
			AND a.parent_id = #{parent.id}
		</if>

		<!--<if test="id != null">-->
		<!-- 数据范围过滤 -->
		<if test="sqlMap!=null and sqlMap.dsf!=null and sqlMap.dsf!=''">
			${sqlMap.dsf}
			OR a.id = #{currentUser.office.id}
		</if>

		<!--</if>-->
		<!--<if test="currentUser != null and currentUser.UserOfficeList != null and currentUser.UserOfficeList.size() != 0">-->

		-- 			OR a.id IN
		<!--<foreach collection="currentUser.UserOfficeList" item="userOffice" index="index"-->
		<!--open="(" close=")" separator=",">-->
		<!--#{userOffice.office.id}-->
		<!--</foreach>-->
		<!--</if>-->
		ORDER BY  a.parent_id
	</select>

	<!--用于分页查询会员列表-->
	<select id="findList" resultType="Office">
		SELECT
		<include refid="officeColumns"/>
		,sua.mobile as "moblieMoeny.mobile"
		FROM sys_office a
		<include refid="officeJoins"/>
		LEFT join sys_user sua on sua.company_id=a.id and a.primary_person=sua.id
		<where>
			a.status = #{DEL_FLAG_NORMAL}
			<if test="name != null and name != ''">
				AND a.name LIKE
				<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
			</if>
			<if test="moblieMoeny != null and moblieMoeny.mobile != null and moblieMoeny.mobile != ''">
				AND sua.mobile LIKE
				<if test="dbName == 'oracle'">'%'||#{moblieMoeny.mobile}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{moblieMoeny.mobile}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{moblieMoeny.mobile},'%')</if>
			</if>
			<!--<if test="gysMobile != null and gysMobile != ''">-->
			<!--AND pp.mobile LIKE-->
			<!--<if test="dbName == 'oracle'">'%'||#{gysMobile}||'%'</if>-->
			<!--<if test="dbName == 'mssql'">'%'+#{gysMobile}+'%'</if>-->
			<!--<if test="dbName == 'mysql'">concat('%',#{gysMobile},'%')</if>-->
			<!--</if>-->
			<if test="consultantId !=null ">
				and ccc.consultant_id= #{consultantId}
			</if>
			<if test="centerId !=null ">
				and ccc.center_id = #{centerId}
			</if>
			<if test="ccStatus !=null ">
				and ccc.status= #{ccStatus}
			</if>
			<!--<if test="primaryPerson!=null and primaryPerson.id!=null and primaryPerson.id!=''">-->
			<!--a.primary_person=#{primaryPerson.id}-->
			<!--</if>-->
			<if test="type != null and type != ''">
				and a.type=#{type}
			</if>
		</where>
		<!-- 数据范围过滤 -->
		${sqlMap.dsf}
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
		ORDER BY a.update_date DESC
	</select>

</mapper>