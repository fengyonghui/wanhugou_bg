<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wanhutong.backend.modules.biz.dao.sku.BizSkuViewLogDao">
    
	<sql id="bizSkuViewLogColumns">
		a.id AS "id",
		a.sku_id AS "skuInfo.id",
		a.item_no AS "itemNo",
		a.front_buy_price AS "frontBuyPrice",
		a.change_price as "changePrice",
		a.after_buy_price AS "afterBuyPrice",
		a.status AS "delFlag",
		a.create_id AS "createBy.id",
		a.create_time AS "createDate",
		a.u_version AS "uVersion",
		a.update_id AS "updateBy.id",
		a.update_time AS "updateDate",
		a.sku_type AS "skuType",
		su.name as "createBy.name",
		us.name as "updateBy.name"
	</sql>
	
	<sql id="bizSkuViewLogJoins">
		LEFT JOIN sys_user su on su.id = a.create_id
		LEFT JOIN sys_user us on us.id = a.update_id
		LEFT JOIN biz_sku_info bsi ON bsi.id = a.sku_id AND a.sku_type = 0
	</sql>
    
	<select id="get" resultType="BizSkuViewLog">
		SELECT 
			<include refid="bizSkuViewLogColumns"/>
		FROM biz_sku_view_price_log a
		<include refid="bizSkuViewLogJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="BizSkuViewLog">
		SELECT 
			<include refid="bizSkuViewLogColumns"/>,
		<if test="skuType != null and skuType == 0">
			bsi.name AS "skuInfo.name"
		</if>
		<if test="skuType != null and skuType == 1">
			bvsi.name AS "skuInfo.name"
		</if>
		FROM biz_sku_view_price_log a
		<include refid="bizSkuViewLogJoins"/>
		<if test="skuType != null and skuType == 1">
			LEFT JOIN biz_vendor_sku_info bvsi ON bvsi.id = a.sku_id AND a.sku_type = 1
			LEFT JOIN biz_vendor_product_info bvpi ON bvpi.id = bvsi.prod_id
			LEFT JOIN sys_office vend ON vend.id = bvpi.vendor_id
		</if>
		<where>
			a.status = #{DEL_FLAG_NORMAL}
			<if test="skuInfo != null and skuInfo.name != null and skuInfo.name != ''">
				AND bsi.name like
				<if test="dbName == 'oracle'">'%'||#{skuInfo.name}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{skuInfo.name}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{skuInfo.name},'%')</if>
			</if>
			<if test="itemNo != null and itemNo != ''">
				AND a.item_no like
				<if test="dbName == 'oracle'">'%'||#{itemNo}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{itemNo}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{itemNo},'%')</if>
			</if>
			<if test="skuType != null">
				AND a.sku_type = #{skuType}
			</if>
			<if test="sqlMap != null and sqlMap.skuType != null and sqlMap.skuType != ''">
				${sqlMap.skuType}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				order by a.create_time desc
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="BizSkuViewLog">
		SELECT 
			<include refid="bizSkuViewLogColumns"/>
		FROM biz_sku_view_price_log a
		<include refid="bizSkuViewLogJoins"/>
		<where>
			a.status = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO biz_sku_view_price_log(
			id,
			sku_id,
			item_no,
			front_buy_price,
			change_price,
			after_buy_price,
			status,
			create_id,
			create_time,
			u_version,
			update_id,
			update_time,
			sku_type
		) VALUES (
			#{id},
			#{skuInfo.id},
			#{itemNo},
			#{frontBuyPrice},
			#{changePrice},
			#{afterBuyPrice},
			#{delFlag},
			#{createBy.id},
			#{createDate},
			#{uVersion},
			#{updateBy.id},
			#{updateDate},
			#{skuType}
		)
	</insert>
	
	<update id="update">
		UPDATE biz_sku_view_price_log SET
			sku_id = #{skuInfo.id},
			item_no = #{itemNo},
			front_buy_price = #{frontBuyPrice},
			change_price=#{changePrice},
			after_buy_price = #{afterBuyPrice},
			u_version = #{uVersion},
			update_id = #{updateBy.id},
			update_time = #{updateDate},
			sku_type = #{skuType}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE biz_sku_view_price_log SET
			status = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
</mapper>