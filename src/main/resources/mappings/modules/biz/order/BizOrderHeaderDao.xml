<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wanhutong.backend.modules.biz.dao.order.BizOrderHeaderDao">

	<resultMap id="orderHeaderResult" type="BizOrderHeader">
		<id property="id" column="id"/>
		<result property="orderNum" column="orderNum"/>
		<result property="orderType" column="orderType"/>
		<result property="totalDetail" column="totalDetail"/>
		<result property="receiveTotal" column="receiveTotal"/>
		<result property="totalExp" column="totalExp"/>

		<result property="freight" column="freight"/>
		<result property="invStatus" column="invStatus"/>
		<result property="bizStatus" column="bizStatus"/>
		<result property="bizType" column="bizType"/>
		<result property="itemNo" column="itemNo"/>
		<result property="delFlag" column="delFlag"/>
		<result property="centersName" column="centersName"/>
		<result property="con.name" column="con.name"/>
		<result property="createDate" column="createDate"/>
		<result property="updateDate" column="updateDate"/>
		<result property="totalBuyPrice" column="totalBuyPrice"/>
		<result property="sellersId" column="sellersId"/>
		<result property="payProportion" column="payProportion"/>
		<result property="suplys" column="suplys"/>
        <result property="consultantId" column="consultantId"/>

		<association property="customer" javaType="Office" column="customer.id">
			<id property="id" column="customer.id"/>
			<result property="name" column="customer.name"/>
			<result property="phone" column="customer.phone"/>
		</association>
		<association property="sellers" javaType="Office" column="sellers.id">
			<id property="id" column="sellers.id"/>
			<result property="name" column="sellers.name"/>
			<association property="bizVendInfo" javaType="BizVendInfo" column="bizVendInfo.office.id">
				<id property="id" column="bizVendInfo.office.id"/>
				<result property="name" column="bizVendInfo.name"/>
			</association>
		</association>

		<association property="bizLocation" javaType="BizOrderAddress" column="bizLocation.id">
			<id property="id" column="bizLocation.id"/>
			<result property="receiver" column="bizLocation.receiver"/>
			<result property="phone" column="bizLocation.phone"/>
			<result property="address" column="bizLocation.address"/>
			<association property="province" javaType="SysRegion" column="province.id">
				<id property="id" column="province.id"/>
				<result property="name" column="province.name"/>
			</association>
			<association property="city" javaType="SysRegion" column="city.id">
				<id property="id" column="city.id"/>
				<result property="name" column="city.name"/>
			</association>
			<association property="region" javaType="SysRegion" column="region.id">
				<id property="id" column="region.id"/>
				<result property="name" column="region.name"/>
			</association>
		</association>

		<association property="platformInfo" javaType="BizPlatformInfo" column="platformInfo.id">
			<id property="id" column="platformInfo.id"/>
			<result property="name" column="platformInfo.name"/>
		</association>

		<association property="createBy" javaType="User" column="createBy.id">
			<id property="id" column="createBy.id"/>
			<id property="name" column="createBy.name"/>
		</association>
		<association property="updateBy" javaType="User" column="updateBy.id">
			<id property="id" column="updateBy.id"/>
			<id property="name" column="updateBy.name"/>
		</association>
		<association property="drawBack" javaType="BizDrawBack" column="drawBack.id">
			<id property="id" column="drawBack.id"/>
			<result property="drawbackStatus" column="drawBack.drawbackStatus"/>
		</association>

		<association property="commonProcess" javaType="CommonProcessEntity" column="commonProcess.id">
			<id property="id" column="commonProcess.id"/>
			<result property="objectId" column="commonProcess.objectId"/>
			<result property="objectName" column="commonProcess.objectName"/>
			<result property="prevId" column="commonProcess.prevId"/>
			<result property="bizStatus" column="commonProcess.bizStatus"/>
			<result property="processor" column="commonProcess.processor"/>
			<result property="description" column="commonProcess.description"/>
			<result property="type" column="commonProcess.type"/>
		</association>

		<association property="bizPoHeader" javaType="BizPoHeader" column="bizPoHeader.id">
			<id property="id" column="bizPoHeader.id"/>
			<id property="orderNum" column="bizPoHeader.orderNum"/>
			<id property="currentPaymentId" column="bizPoHeader.currentPaymentId"/>
			<id property="poSchType" column="bizPoHeader.poSchType"/>
			<association property="commonProcess" javaType="CommonProcessEntity" column="bizPoHeader.commonProcess">
				<id property="id" column="bizPoHeader.commonProcess.id"/>
				<id property="objectId" column="bizPoHeader.commonProcess.objectId"/>
				<id property="objectName" column="bizPoHeader.commonProcess.objectName"/>
				<id property="prevId" column="bizPoHeader.commonProcess.prevId"/>
				<id property="bizStatus" column="bizPoHeader.commonProcess.bizStatus"/>
				<id property="processor" column="bizPoHeader.commonProcess.processor"/>
				<id property="description" column="bizPoHeader.commonProcess.description"/>
				<id property="type" column="bizPoHeader.commonProcess.type"/>
			</association>
		</association>

		<collection property="orderDetailList" ofType="BizOrderDetail">
			<id property="id" column="orderDetailList.id" />
			<result property="ordQty" column="orderDetailList.ordQty" />
			<result property="sentQty" column="orderDetailList.sentQty" />
			<result property="lineNo" column="orderDetailList.lineNo" />
			<association property="skuInfo" javaType="BizSkuInfo" column="skuInfo.id">
				<id property="id" column="orderDetailList.skuInfo.id"/>
				<result property="name" column="orderDetailList.skuInfo.name"/>
				<result property="partNo" column="orderDetailList.skuInfo.partNo"/>
				<result property="buyPrice" column="orderDetailList.skuInfo.buyPrice" />
				<result property="itemNo" column="orderDetailList.skuInfo.itemNo"/>
			</association>
			<association property="vendor" javaType="Office" column="vendor.id">
				<id property="id" column="orderDetailList.vendor.id"/>
				<result property="name" column="orderDetailList.vendor.name"/>
			</association>
		</collection>


	</resultMap>


	<sql id="bizOrderHeaderColumns">
		a.id AS "id",
		a.order_num AS "orderNum",
		a.order_type AS "orderType",
		a.pay_proportion AS "payProportion",
		a.cust_id AS "customer.id",
		a.consultant_id AS "consultantId",
		so.name as "customer.name",
		so.phone AS "customer.phone",
		a.seller_id as "sellers.id",
		vend.name AS "sellers.name",
		a.seller_id as "sellersId",
		c.receiver as "bizLocation.receiver",
		c.phone as "bizLocation.phone",
		c.province_id as "bizLocation.province.id",
		province.name as "bizLocation.province.name",
		c.city_id as "bizLocation.city.id",
		city.name as "bizLocation.city.name",
		c.region_id as "bizLocation.region.id",
		reg.name as "bizLocation.region.name",
		c.address as "bizLocation.address",
		a.total_detail AS "totalDetail",
		a.receive_total as "receiveTotal",
		a.total_exp AS "totalExp",
		a.freight AS "freight",
		a.inv_status AS "invStatus",
		a.biz_status AS "bizStatus",
		a.biz_type as "bizType",
		a.plateform_id AS "platformInfo.id",
		bpi.name as "platformInfo.name",
		a.ship_to_addr AS "bizLocation.id",
		a.status AS "delFlag",
		a.create_id AS "createBy.id",
		su.name as "createBy.name",
		a.create_time AS "createDate",
		a.u_version AS "uVersion",
		a.update_id AS "updateBy.id",
		us.name as "updateBy.name",
		a.update_time AS "updateDate",
		s.id AS "centerId",
		s.name as "centersName",
		con.id AS "con.id",
		con.name AS "con.name",
		process.id AS "commonProcess.id",
		process.object_id AS "commonProcess.objectId",
		process.object_name AS "commonProcess.objectName",
		process.prev_id AS "commonProcess.prevId",
		process.biz_status AS "commonProcess.bizStatus",
		process.processor AS "commonProcess.processor",
		process.description AS "commonProcess.description",
		process.type AS "commonProcess.type",
		bph.id AS "bizPoHeader.id",
		bph.process_id AS "bizPoHeader.processId",
		bph.current_payment_id AS "bizPoHeader.currentPaymentId",
		cp.id AS "bizPoHeader.commonProcess.id",
		cp.object_id AS "bizPoHeader.commonProcess.objectId",
		cp.object_name AS "bizPoHeader.commonProcess.objectName",
		cp.prev_id AS "bizPoHeader.commonProcess.prevId",
		cp.biz_status AS "bizPoHeader.commonProcess.bizStatus",
		cp.processor AS "bizPoHeader.commonProcess.processor",
		cp.description AS "bizPoHeader.commonProcess.description",
		cp.type AS "bizPoHeader.commonProcess.type",
		bsp.po_sch_type AS "bizPoHeader.poSchType",
		vendi.office_id AS "sellers.bizVendInfo.office.id",
		vendi.vend_name AS "sellers.bizVendInfo.vendName"
	</sql>

	<!-- C端订单管理 -->
	<sql id="cendOrderHeaderColumns">
		a.id AS "id",
		a.order_num AS "orderNum",
		a.order_type AS "orderType",
		a.cust_id AS "customer.id",
		a.seller_id as "sellers.id",
		a.seller_id as "sellersId",
		a.total_detail AS "totalDetail",
		a.receive_total as "receiveTotal",
		a.total_exp AS "totalExp",
		a.freight AS "freight",
		a.inv_status AS "invStatus",
		a.biz_status AS "bizStatus",
		a.biz_type as "bizType",
		a.plateform_id AS "platformInfo.id",
		a.ship_to_addr AS "bizLocation.id",
		a.status AS "delFlag",
		a.create_id AS "createBy.id",
		a.create_time AS "createDate",
		a.u_version AS "uVersion",
		a.update_id AS "updateBy.id",
		a.update_time AS "updateDate",
		wxsu.name AS "customer.name",
		bpi.name as "platformInfo.name",
		su.name as "createBy.name",
		suu.name as "updateBy.name",
		boc.id as "orderComment.id",
		boc.comments as "orderComment.comments"
	</sql>
	<sql id="cendOrderHeaderJoins">
		left join sys_user wxsu on wxsu.id=a.cust_id
		left join biz_cms_platform_info bpi on bpi.id=a.plateform_id
		<!--left join sys_wx_personal_user wxpu on wxpu.id=a.create_id-->
		left join sys_user su on a.create_id=su.id
		left join sys_user suu on a.update_id=suu.id
		left join biz_order_comment boc on boc.order_id=a.id
	</sql>
	<!-- end -->

	<sql id="bizOrderHeaderJoins">
		left join sys_office as so on a.cust_id=so.id
		LEFT JOIN sys_office vend ON vend.id = a.seller_id
		LEFT JOIN biz_vend_info vendi ON vendi.office_id = vend.id
		LEFT JOIN biz_order_address c ON c.id = a.ship_to_addr
        LEFT JOIN sys_region province ON c.province_id = province.id
        LEFT JOIN sys_region city ON c.city_id = city.id
        LEFT JOIN sys_region reg ON c.region_id = reg.id
		left join sys_user su on a.create_id=su.id
		left join sys_user us on a.update_id=us.id
		left join biz_cms_platform_info bpi on a.plateform_id=bpi.id
    	LEFT JOIN biz_custom_center_consultant ccs ON ccs.cust_id=a.cust_id
		LEFT JOIN sys_office s on s.id=ccs.center_id
		LEFT JOIN sys_user con ON con.id = ccs.consultant_id
		LEFT JOIN  common_process process on process.id = a.process_id
		LEFT JOIN biz_po_order_req bpor ON bpor.so_id = a.id AND bpor.so_type = 1
		LEFT JOIN biz_po_header bph ON bph.id = bpor.po_id
		LEFT JOIN common_process cp ON cp.id = bph.process_id
		LEFT JOIN biz_scheduling_plan bsp ON bsp.object_id = bph.id AND bsp.object_name='biz_po_header' AND bsp.status = 1
		LEFT JOIN biz_po_payment_order bppo ON bppo.id = bph.current_payment_id
	</sql>


	<sql id="bizOrderHeaderVendJoins">
		left join sys_office as so on a.cust_id=so.id
		LEFT JOIN sys_office vend ON vend.id = pi.vendor_id
		LEFT JOIN biz_vend_info vendi ON vendi.office_id = vend.id
		LEFT JOIN biz_order_address c ON c.id = a.ship_to_addr
		LEFT JOIN sys_region province ON c.province_id = province.id
		LEFT JOIN sys_region city ON c.city_id = city.id
		LEFT JOIN sys_region reg ON c.region_id = reg.id
		left join sys_user su on a.create_id=su.id
		left join sys_user us on a.update_id=us.id
		left join biz_cms_platform_info bpi on a.plateform_id=bpi.id
		LEFT JOIN biz_custom_center_consultant ccs ON ccs.cust_id=a.cust_id
		LEFT JOIN sys_office s on s.id=ccs.center_id
		LEFT JOIN sys_user con ON con.id = ccs.consultant_id
		LEFT JOIN  common_process process on process.id = a.process_id
		LEFT JOIN biz_po_order_req bpor ON bpor.so_id = a.id AND bpor.so_type = 1
		LEFT JOIN biz_po_header bph ON bph.id = bpor.po_id
		LEFT JOIN common_process cp ON cp.id = bph.process_id
		LEFT JOIN biz_scheduling_plan bsp ON bsp.object_id = bph.id AND bsp.object_name='biz_po_header' AND bsp.status = 1
		LEFT JOIN biz_po_payment_order bppo ON bppo.id = bph.current_payment_id
	</sql>

	<select id="get" resultType="BizOrderHeader">
		SELECT
		<include refid="bizOrderHeaderColumns"/>
		,
		(SELECT SUM(bod.suply_id)
		FROM biz_order_detail bod
		LEFT JOIN biz_order_header boh ON boh.id = bod.order_id
		WHERE boh.id = a.id) AS "suplys"
		FROM biz_order_header a
		<include refid="bizOrderHeaderJoins"/>
		WHERE a.id = #{id}
		group by a.id
	</select>

	<select id="getByOrderNum" resultType="BizOrderHeader">
		SELECT
		<include refid="bizOrderHeaderColumns"/>
		FROM biz_order_header a
		<include refid="bizOrderHeaderJoins"/>
		WHERE a.order_num = #{orderNum}
		group by a.id
	</select>


	<select id="findList" resultMap="orderHeaderResult">
		SELECT
		<include refid="bizOrderHeaderColumns"/>,
		od.id AS "orderDetailList.id",
		od.unit_price AS "orderDetailList.unitPrice",
		od.ord_qty AS "orderDetailList.ordQty",
		od.sent_qty AS "orderDetailList.sentQty",
		od.line_no AS "orderDetailList.lineNo",
		si.id AS "orderDetailList.skuInfo.id",
		si.buy_price AS "orderDetailList.skuInfo.buyPrice",
		si.item_no AS "orderDetailList.skuInfo.itemNo",
		pi.vendor_name AS "orderDetailList.vendor.name",
		(SELECT SUM(bod.suply_id)
		FROM biz_order_detail bod
		LEFT JOIN biz_order_header boh ON boh.id = bod.order_id
		WHERE boh.id = a.id) AS "suplys",
		(select
			sum(od.buy_price * od.ord_qty)
		from
			biz_order_detail od
		WHERE
			od.status=1
		and od.order_id=a.id
		GROUP BY a.id ) as "totalBuyPrice"
		<if test="statu != null and statu =='refund'">
			,bd.drawback_status AS "drawBack.drawbackStatus"
		</if>
		FROM biz_order_header a
		LEFT JOIN biz_order_detail od ON od.order_id = a.id
		<if test="statu != null and statu =='unline'">
			LEFT JOIN biz_order_header_unline ohu on ohu.order_id = a.id
		</if>
		<if test="statu != null and statu =='refund'">
			LEFT JOIN biz_drawback bd on bd.order_id = a.id
		</if>
		LEFT JOIN biz_sku_info si ON si.id=od.sku_id
		LEFT JOIN biz_product_info pi ON pi.id = si.prod_id
		<!-- 供应商id -->
		<if test="vendorId !=null and vendorId != ''">
			LEFT JOIN sys_office sv ON sv.id = pi.vendor_id
		</if>

		<if test="originCode !=null and originCode != ''">
			LEFT JOIN common_process cpo ON cpo.object_id = a.id
		</if>
		<if test="localCode !=null and localCode != ''">
			LEFT JOIN common_process cpl ON cpl.object_id = a.id
		</if>

		<!-- end  -->
		<choose>
			<when test="source != null and source == 'vendor'">
				<include refid="bizOrderHeaderVendJoins"/>
			</when>
			<otherwise>
				<include refid="bizOrderHeaderJoins"/>
			</otherwise>
		</choose>




		<where> 1=1 and a.order_type !=4
			<if test="poAuditCode != null and poAuditCode != ''">
				and cp.type in
				<foreach collection="poAuditCode" index="index" item="item" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="poAuditCode == null or poAuditCode == ''">
				<if test="originCode !=null and originCode != ''">
					and cpo.object_name = 'ORDER_HEADER_SO_ORIGIN' and cpo.current = 1
					and bph.id is null
					and cpo.type in
					<foreach collection="originCode" index="index" item="item" open="(" separator="," close=")">
						#{item}
					</foreach>
					and (SELECT SUM(bod.suply_id)
					FROM biz_order_detail bod
					LEFT JOIN biz_order_header boh ON boh.id = bod.order_id
					WHERE boh.id = a.id) = 0
				</if>
				<if test="localCode !=null and localCode != ''">
					and cpl.object_name = 'ORDER_HEADER_SO_LOCAL' and cpl.current = 1
					and bph.id is null
					and cpl.type in
					<foreach collection="localCode" index="index" item="item" open="(" separator="," close=")">
						#{item}
					</foreach>
					and (SELECT SUM(bod.suply_id)
					FROM biz_order_detail bod
					LEFT JOIN biz_order_header boh ON boh.id = bod.order_id
					WHERE boh.id = a.id) != 0
				</if>
				<if test="doAllCode !=null and doAllCode != ''">
					and bph.id is null
					and process.type in
					<foreach collection="doAllCode" index="index" item="item" open="(" separator="," close=")">
						#{item}
					</foreach>
				</if>
				<if test="doFifthCode != null and doFifthCode != '' ">
					and bph.id is null
					and process.type in
					<foreach collection="doFifthCode" index="index" item="item" open="(" separator="," close=")">
						#{item}
					</foreach>
				</if>
			</if>

			<if test="source != null and source == 'vendor'">

				AND (a.order_type = 1 OR a.order_type = 5)
			</if>
			<if test="dataStatus==null">
				and a.status = 1
			</if>
			<if test="orderNum != null and orderNum != ''">
				AND a.order_num
				LIKE
				<if test="dbName == 'oracle'">'%'||#{orderNum}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{orderNum}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{orderNum},'%')</if>
			</if>
			<if test="skuChickCount!=null and skuChickCount!=''">
				AND (
				(
				biz_status != 45
				AND biz_status != 40
				AND biz_status != 35
				AND biz_status != 0
				)
				OR (biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0)
				)
			</if>
			<if test="orderType != null and orderType != ''">
				AND a.order_type = #{orderType}
			</if>
			<if test="name != null and name != ''">
				AND pi.vendor_name LIKE
				<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
			</if>
			<if test="customer != null and customer.id != null and customer.id!=''">
				AND a.cust_id = #{customer.id}
			</if>
			<if test="centersName != null and centersName!=''">
				AND s.name like
				<if test="dbName == 'oracle'">'%'||#{centersName}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{centersName}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{centersName},'%')</if>
			</if>
			<if test="customer != null and customer.phone != null and customer.phone!=''">
				AND su.mobile LIKE
				<if test="dbName == 'oracle'">'%'||#{customer.phone}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{customer.phone}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{customer.phone},'%')</if>
			</if>
			<if test="receiveTotal != null and receiveTotal != ''">
				AND a.receive_total = #{receiveTotal}
			</if>
			<if test="bizStatus !=null">
				AND a.biz_status=#{bizStatus}
			</if>
			<!-- 列表时间查询 -->
			<if test="orderCreatStartTime !=null and orderCreatStartTime !=''">
				AND a.create_time &gt;= #{orderCreatStartTime}
				<if test="orderCreatEndTime!=null and orderCreatEndTime!=''">
                    AND a.create_time &lt;= #{orderCreatEndTime}
				</if>
			</if>
			<if test="orderUpdaStartTime !=null and orderUpdaStartTime !=''">
				AND a.update_time &gt;= #{orderUpdaStartTime}
				<if test="orderUpdaEndTime!=null and orderUpdaEndTime!=''">
                    AND a.update_time &lt;= #{orderUpdaEndTime}
				</if>
			</if>
			<!-- end -->
			<if test="bizType !=null and bizType!=''">
				AND a.biz_type=#{bizType}
			</if>
			<if test="sendGoodsStatus != null and sendGoodsStatus == 1">
				AND a.order_type != 6
			</if>
			<if test="bizStatusStart !=null and bizStatusEnd !=null">
				AND a.biz_status BETWEEN #{bizStatusStart} and #{bizStatusEnd}
			</if>
			<if test="invStatus !=null and invStatus!=''">
				AND a.inv_status=#{invStatus}
			</if>
			<if test="supplyId !=null and supplyId ==-1">
				and od.suply_id !=0
			</if>
			<if test="supplyId !=null and supplyId !=-1 and supplyId !=0">
				and od.suply_id = #{supplyId}
			</if>
			<if test="consultantId!=null">
				and ccs.consultant_id = #{consultantId}
			</if>

			<if test="centerId!=null">
				and ccs.center_id = #{centerId}
			</if>

			<if test="itemNo !=null and itemNo !=''">
				and si.item_no
				LIKE
				<if test="dbName == 'oracle'">'%'||#{itemNo}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{itemNo}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{itemNo},'%')</if>
			</if>

			<if test="partNo !=null and partNo !=''">
				and si.part_no
				LIKE
				<if test="dbName == 'oracle'">'%'||#{partNo}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{partNo}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{partNo},'%')</if>
			</if>
			<if test="con !=null and con.name != null and con.name !=''">
				and con.name
				LIKE
				<if test="dbName == 'oracle'">'%'||#{con.name}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{con.name}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{con.name},'%')</if>
			</if>
			<if test="statu != null and statu == 'unline'">
				AND ohu.id IS NOT NULL
			</if>
			<if test="statu != null and statu == 'refund'">
				AND (bd.drawback_status = 0 OR bd.drawback_status = 1 OR bd.drawback_status = 2 OR bd.drawback_status = 3)
			</if>
			<if test="statu != null and statu =='unline' and examine != null and examine == 2">
				AND ohu.biz_status = 0
			</if>
			<if test="statu != null and statu =='unline' and examine != null and examine == 1">
				AND a.id NOT IN (
					SELECT b.id
					FROM biz_order_header b
					LEFT JOIN biz_order_header_unline bohu ON bohu.order_id = b.id
					WHERE bohu.biz_status = 0
					AND bohu.`status` = 1
					AND b.`status` = 1
					AND b.order_type != 4
				)
			</if>
			<if test="page != null and page.includeTestData != true and skuChickCount==null">
				AND NOT EXISTS(
				select 1
				from sys_test_account ta
				where a.cust_id = ta.object_id
				and ta.object_name = 'sys_office'
				)
			</if>

			<if test="sqlMap != null and sqlMap.order != null and sqlMap.order != ''">
				${sqlMap.order}
			</if>
			<if test="vendorId !=null and vendorId != ''">
				AND  sv.id = ${vendorId}
			</if>
			<if test="id != null and id != ''">
				AND a.id = #{id}
			</if>
			<if test="bizPoHeader !=null and bizPoHeader.id != null and bizPoHeader.id != ''">
				AND  bph.id = ${bizPoHeader.id}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				GROUP  BY a.id
			</otherwise>
		</choose>
        <if test="waitPay == 1 or waitPay == '1'">
            having sum(bppo.total - bppo.pay_total) > 0
        </if>
		ORDER BY updateDate DESC
	</select>

	<select id="findCount" resultType="Integer">
		SELECT count(1) from
		(SELECT
		<include refid="bizOrderHeaderColumns"/>,
		od.id AS "orderDetailList.id",
		od.unit_price AS "orderDetailList.unitPrice",
		od.ord_qty AS "orderDetailList.ordQty",
		od.sent_qty AS "orderDetailList.sentQty",
		si.id AS "orderDetailList.skuInfo.id",
		si.buy_price AS "orderDetailList.skuInfo.buyPrice",
		si.item_no AS "orderDetailList.skuInfo.itemNo",
		FROM biz_order_header a
		LEFT JOIN biz_order_detail od ON od.order_id = a.id
		LEFT JOIN biz_sku_info si ON si.id=od.sku_id
		<include refid="bizOrderHeaderJoins"/>
		<where>
			a.status = #{DEL_FLAG_NORMAL}
			<if test="orderNum != null and orderNum != ''">
				AND a.order_num
				LIKE
				<if test="dbName == 'oracle'">'%'||#{orderNum}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{orderNum}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{orderNum},'%')</if>
			</if>
			<if test="centersName != null and centersName!=''">
				AND s.name like
				<if test="dbName == 'oracle'">'%'||#{centersName}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{centersName}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{centersName},'%')</if>
			</if>
			<if test="orderType != null and orderType != ''">
				AND a.order_type = #{orderType}
			</if>
			<if test="customer != null and customer.id != null and customer.id!=''">
				AND a.cust_id = #{customer.id}
			</if>
			<if test="customer != null and customer.phone != null and customer.phone!=''">
				AND su.mobile LIKE
				<if test="dbName == 'oracle'">'%'||#{customer.phone}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{customer.phone}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{customer.phone},'%')</if>
			</if>
			<if test="receiveTotal != null and receiveTotal != ''">
				AND a.receive_total = #{receiveTotal}
			</if>
			<if test="bizStatus !=null">
				AND a.biz_status=#{bizStatus}
			</if>
			<if test="bizType !=null and bizType!=''">
				AND a.biz_type=#{bizType}
			</if>
			<if test="bizStatusStart !=null and bizStatusEnd !=null">
				AND a.biz_status BETWEEN #{bizStatusStart} and #{bizStatusEnd}
			</if>
			<if test="invStatus !=null and invStatus!=''">
				AND a.inv_status=#{invStatus}
			</if>
			<if test="consultantId!=null">
				and ccs.consultant_id = #{consultantId}
			</if>

			<if test="centerId!=null">
				and ccs.center_id = #{centerId}
			</if>

			<if test="itemNo !=null and itemNo !=''">
				and si.item_no
				LIKE
				<if test="dbName == 'oracle'">'%'||#{itemNo}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{itemNo}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{itemNo},'%')</if>
			</if>

			<if test="partNo !=null and partNo !=''">
				and si.part_no
				LIKE
				<if test="dbName == 'oracle'">'%'||#{partNo}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{partNo}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{partNo},'%')</if>
			</if>

			<if test="con !=null and con.name != null and con.name !=''">
				and con.name
				LIKE
				<if test="dbName == 'oracle'">'%'||#{con.name}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{con.name}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{con.name},'%')</if>
			</if>

			<if test="sqlMap != null and sqlMap.order != null and sqlMap.order != ''">
				${sqlMap.order}
			</if>
		</where>



		GROUP  BY a.id
		) tmp_count




	</select>

	<select id="findAllList" resultType="BizOrderHeader">
		SELECT
		<include refid="bizOrderHeaderColumns"/>
		FROM biz_order_header a
		<include refid="bizOrderHeaderJoins"/>
		<where>
			a.status = #{DEL_FLAG_NORMAL}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
		ORDER BY updateDate DESC
	</select>

	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO biz_order_header(
		id,
		order_num,
		order_type,
		cust_id,
		<if test="sellers!=null and sellers.id!=null and sellers.id!=''">
			seller_id,
		</if>
		total_detail,
		<if test="receiveTotal !=null and receiveTotal !=''">
			receive_total,
		</if>
		total_exp,
		freight,
		<if test="invStatus !=null and invStatus !=''">
			inv_status,
		</if>
		<if test="bizStatus !=null and bizStatus !=''">
			biz_status,
		</if>
		biz_type,
		plateform_id,
		ship_to_addr,
		status,
		create_id,
		create_time,
		u_version,
		update_id,
		update_time
		) VALUES (
		#{id},
		#{orderNum},
		#{orderType},
		#{customer.id},
		<if test="sellers!=null and sellers.id!=null and sellers.id!=''">
			#{sellers.id},
		</if>
		#{totalDetail},
		<if test="receiveTotal !=null and receiveTotal !=''">
			#{receiveTotal},
		</if>
		#{totalExp},
		#{freight},
		<if test="invStatus !=null and invStatus !=''">
			#{invStatus},
		</if>
		<if test="bizStatus !=null and bizStatus !=''">
			#{bizStatus},
		</if>
		#{bizType},
		#{platformInfo.id},
		#{bizLocation.id},
		#{delFlag},
		#{createBy.id},
		#{createDate},
		#{uVersion},
		#{updateBy.id},
		#{updateDate}
		)
	</insert>

	<update id="update">
		UPDATE biz_order_header SET
		order_num = #{orderNum},
		order_type = #{orderType},
		cust_id = #{customer.id},
		<if test="sellers!=null and sellers.id!=null and sellers.id!=''">
		seller_id = #{sellers.id},
		</if>
		total_detail = #{totalDetail},
		receive_total = #{receiveTotal},
		total_exp = #{totalExp},
		freight = #{freight},
		inv_status = #{invStatus},
		biz_status = #{bizStatus},
		biz_type = #{bizType},
		plateform_id = #{platformInfo.id},
		ship_to_addr = #{bizLocation.id},
		u_version = #{uVersion},
		update_id = #{updateBy.id},
		update_time = #{updateDate},
		pay_proportion = #{payProportion}
		WHERE id = #{id}
	</update>

	<update id="delete">
		UPDATE biz_order_header SET 
			status = #{delFlag}
		WHERE id = #{id}
	</update>

	<select id="findListFirstOrder" resultType="BizOrderHeader">
		SELECT
		<include refid="bizOrderHeaderColumns"/>
		FROM biz_order_header a
		<include refid="bizOrderHeaderJoins"/>
		<where>
			a.status = #{DEL_FLAG_NORMAL}
			<if test="customer !=null and customer.id!=null and customer.id!=''">
				AND a.cust_id=#{customer.id}
			</if>
			<if test="bizStatus !=null">
				AND a.biz_status !=#{bizStatus}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>

	<update id="updateMoney">
		UPDATE biz_order_header SET
		total_detail = #{totalDetail}
		<if test="totalExp !=null and totalExp !=''">
			,total_exp = #{totalExp}
		</if>
		<if test="freight !=null and freight !=''">
			,freight = #{freight}
		</if>
		WHERE id = #{id}
	</update>

	<!--================================================================-->
	<!--计算成本-->
	<select id="getValidOrderTotalAndCountByCreateTimeMonth" resultType="com.wanhutong.backend.modules.biz.entity.dto.BizOrderStatisticsDto">
		SELECT
		sum(total_detail + total_exp + freight) AS totalMoney,
		sum(receive_total)                                   AS receiveTotal,
		count(1) AS orderCount,
		office.id AS officeId,
		office.name AS officeName,
		(SELECT
		sum(detail1.buy_price * detail1.ord_qty)
		FROM
		biz_order_header AS header1
		LEFT JOIN biz_custom_center_consultant AS consultant1 ON consultant1.cust_id = header1.cust_id
		LEFT JOIN sys_office AS office1 ON consultant1.center_id = office1.id
		LEFT JOIN biz_order_detail AS detail1 ON detail1.order_id = header1.id
		WHERE office.id = office1.id AND header1.order_type != 4 AND detail1.status = 1
		AND (<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
		biz_status != #{item.state}
	</foreach>
		OR (biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
		AND
		header1.create_time LIKE #{month}
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where header1.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		GROUP BY office.id)                     AS buyPrice
		FROM biz_order_header AS header
		LEFT JOIN biz_custom_center_consultant AS consultant ON consultant.cust_id = header.cust_id
		LEFT JOIN sys_office AS office ON consultant.center_id = office.id
		WHERE
		header.order_type != 4
		AND not exists(
		select 1
		from sys_test_account ta
		where header.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		AND
		(<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
		biz_status != #{item.state}
	</foreach>
		OR (biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
		AND header.create_time LIKE #{month}
		AND office.type = #{officeType}
		GROUP BY office.id
	</select>

	<select id="getValidOrderTotalAndCountByCreateTimeMonthOfficeId" resultType="com.wanhutong.backend.modules.biz.entity.dto.BizOrderStatisticsDto">
		SELECT
		sum(total_detail + total_exp + freight) AS totalMoney,
		sum(receive_total)                                   AS receiveTotal,
		count(1) AS orderCount,
		office.id AS officeId,
		office.name AS officeName,
		(SELECT
		sum(detail1.buy_price * detail1.ord_qty)
		FROM
		biz_order_header AS header1
		LEFT JOIN biz_custom_center_consultant AS consultant1 ON consultant1.cust_id = header1.cust_id
		LEFT JOIN sys_office AS office1 ON consultant1.center_id = office1.id
		LEFT JOIN biz_order_detail AS detail1 ON detail1.order_id = header1.id
		WHERE office.id = office1.id AND header1.order_type != 4 AND header1.order_type != 6 and detail1.status = 1
		AND (<foreach collection="@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@INVALID_STATUS" index="index" item="item" open="(" separator="AND" close=")">
		biz_status != #{item.state}
	</foreach>
		OR (biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
		AND
		header1.create_time LIKE #{month}
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where header1.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		and office1.id = #{officeId}
		GROUP BY office1.id)                     AS buyPrice
		FROM biz_order_header AS header
		LEFT JOIN biz_custom_center_consultant AS consultant ON consultant.cust_id = header.cust_id
		LEFT JOIN sys_office AS office ON consultant.center_id = office.id
		WHERE
		header.order_type != 4 and header.order_type != 6 and header.status = 1
		AND not exists(
		select 1
		from sys_test_account ta
		where header.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		AND
		(<foreach collection="@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@INVALID_STATUS" index="index" item="item" open="(" separator="AND" close=")">
		biz_status != #{item.state}
	</foreach>
		OR (biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
		AND header.create_time LIKE #{month}
		and office.id = #{officeId}
		GROUP BY office.id
	</select>

	<select id="getProductStatisticData" resultType="com.wanhutong.backend.modules.biz.entity.dto.BizProductStatisticsDto">
		SELECT DISTINCT
		sum(oh.total_detail + oh.total_exp + oh.freight) AS totalMoney,
		sum(receive_total) AS receiveTotal,
		od.sku_id AS skuId, pi.name, pi.item_no AS itemNo, pi.vendor_name AS vendorName, ss.sale_price AS salePrice, count(1) as count,
		(SELECT count(1) FROM biz_prod_view_log AS pvLog WHERE pvLog.prod_id = si.prod_id AND date_format(pvLog.create_time, '%Y-%m') = #{month}) AS clickCount
		from biz_order_header oh, biz_order_detail od,biz_sku_info si,biz_product_info pi,biz_op_shelf_sku ss, biz_custom_center_consultant ccc
		WHERE oh.id = od.order_id
		and oh.order_type != 4
		and si.id = od.sku_id
		and si.prod_id = pi.id
		<if test="variId != null and variId != 0">
			and pi.vari_id = #{variId}
		</if>
		and ccc.cust_id = oh.cust_id
		and oh.`status` = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL}
		and si.`status` = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL}
		and pi.`status` = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL}
		and ss.`status` = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL}
		and ss.sku_id = si.id
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where oh.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		AND date_format(oh.create_time, '%Y-%m') = #{month}
		<if test="purchasingId != null and purchasingId != 0">
			AND ccc.center_id = #{purchasingId}
		</if>
		GROUP BY si.prod_id
		ORDER BY count DESC
		LIMIT 10
	</select>

	<select id="getUserStatisticData" resultType="com.wanhutong.backend.modules.biz.entity.dto.BizUserStatisticsDto">
		SELECT s.name,count(1) as count
		FROM biz_custom_center_consultant c, sys_office s
		WHERE c.cust_id = ANY (
			SELECT s1.id
			from sys_office AS s1, sys_user AS u1
			where s1.id = u1.company_id
			AND s1.type = 6
			AND date_format(s1.create_date, '%Y-%m') = #{month}
			AND s1.status = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL}
			AND u1.status = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL})
		AND c.status = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL}
		AND s.status = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL} and s.id = c.center_id
		and s.TYPE =8
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where c.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		GROUP BY center_id
	</select>

	<select id="getUserStatisticDataByOfficeId" resultType="com.wanhutong.backend.modules.biz.entity.dto.BizUserStatisticsDto">
		SELECT s.name,count(1) as count
		FROM biz_custom_center_consultant c, sys_office s
		WHERE c.cust_id = ANY (
			SELECT s1.id
			from sys_office AS s1, sys_user AS u1
			where s1.id = u1.company_id
			AND s1.type = 6
			AND date_format(s1.create_date, '%Y-%m') = #{month}
			AND s1.status = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL}
			AND u1.status = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL})
		AND c.status = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL}
		AND s.status = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL} and s.id = c.center_id
		and s.TYPE =8
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where c.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		and s.id = #{officeId}
		GROUP BY center_id
	</select>

	<select id="getUserSaleStatisticData" resultType="com.wanhutong.backend.modules.biz.entity.dto.BizUserSaleStatisticsDto">
		SELECT
		sum(oh.total_detail + oh.total_exp + oh.freight) AS totalMoney,
		sum(receive_total) AS receiveTotal,
		count(1) AS orderCount,
		us.name AS name,
		us.id AS usId,
		(SELECT sum(detail1.buy_price * detail1.ord_qty)
		FROM biz_order_header AS header1
		LEFT JOIN biz_custom_center_consultant AS consultant1 ON consultant1.cust_id = header1.cust_id
		LEFT JOIN biz_order_detail AS detail1 ON detail1.order_id = header1.id
		LEFT JOIN sys_user us1 ON consultant1.consultant_id = us1.id
		WHERE us.id = us1.id AND header1.order_type != 4 AND detail1.status = 1
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where header1.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		AND detail1.status = 1
		AND header1.status = 1
		AND us1.status = 1
		AND consultant1.status = 1
		AND
		(<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
		header1.biz_status != #{item.state}
		</foreach>
		OR (header1.biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
		<if test="month != null and month != ''">
		AND header1.create_time LIKE #{month}
		</if>
		GROUP BY us1.name)   AS buyPrice,
		CASE date_format(oh.create_time, '%Y-%m')
		WHEN '2017-06'
		THEN '2017-09'
		WHEN '2017-07'
		THEN '2017-10'
		WHEN '2017-08'
		THEN '2017-09'
		ELSE date_format(oh.create_time, '%Y-%m')
		END   createTime
		FROM biz_order_header oh
		LEFT JOIN	sys_office off ON off.id = oh.cust_id
		LEFT JOIN biz_custom_center_consultant ccc ON ccc.cust_id = off.id
		LEFT JOIN sys_user us ON us.id = ccc.consultant_id
		WHERE
		oh.order_type != 4
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where oh.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		and oh.`status` = 1
		AND (<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
		biz_status != #{item.state}
		</foreach>
		OR (biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
		<if test="month != null and month != ''">
			AND oh.create_time LIKE #{month}
		</if>
		<if test="purchasingId != null and purchasingId != 0">
			AND us.office_id = #{purchasingId}
		</if>
		<if test="usId != null and usId != 0">
			AND us.id = #{usId}
		</if>
		GROUP BY us.`id`
	</select>

	<select id="getSingleUserSaleStatisticData" resultType="com.wanhutong.backend.modules.biz.entity.dto.BizUserSaleStatisticsDto">
		SELECT
		sum(oh.total_detail + oh.total_exp + oh.freight) AS totalMoney,
		sum(receive_total) AS receiveTotal,
		<!--start-->
		(SELECT count(1) FROM
		biz_custom_center_consultant cc WHERE cc.consultant_id = us.id
		) AS custCount,
		<!--end-->
		count(1) AS orderCount,
		us.name AS name,
		us.id AS usId,
		(SELECT sum(detail1.buy_price * detail1.ord_qty)
		FROM biz_order_header AS header1
		LEFT JOIN biz_custom_center_consultant AS consultant1 ON consultant1.cust_id = header1.cust_id
		LEFT JOIN biz_order_detail AS detail1 ON detail1.order_id = header1.id
		LEFT JOIN sys_user us1 ON consultant1.consultant_id = us1.id
		WHERE us.id = us1.id AND header1.order_type != 4 AND detail1.status = 1
		AND header1.status = 1
		AND us1.status = 1
		AND consultant1.status = 1
		AND date_format(header1.create_time, '%Y-%m') = date_format(oh.create_time, '%Y-%m')
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where header1.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		AND
		(<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
		header1.biz_status != #{item.state}
		</foreach>
		OR (header1.biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
		GROUP BY us1.name)   AS buyPrice,
		-- 		date_format(oh.create_time, '%Y-%m') AS createTime
		CASE date_format(oh.create_time, '%Y-%m')
		WHEN '2017-06'
		THEN '2017-09'
		WHEN '2017-07'
		THEN '2017-10'
		WHEN '2017-08'
		THEN '2017-09'
		ELSE date_format(oh.create_time, '%Y-%m')
		END   createTime
		FROM biz_order_header oh
		LEFT JOIN	sys_office off ON off.id = oh.cust_id
		LEFT JOIN biz_custom_center_consultant ccc ON ccc.cust_id = off.id
		LEFT JOIN sys_user us ON us.id = ccc.consultant_id
	    WHERE
		oh.order_type != 4
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where oh.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		AND off.name NOT LIKE '%测试%'
		AND us.name NOT LIKE '%测试%'
		and oh.`status` = 1
		AND (<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
		biz_status != #{item.state}
	</foreach>
		OR (biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
		<if test="purchasingId != null and purchasingId != 0">
			AND us.office_id = #{purchasingId}
		</if>
		<if test="usId != null and usId != 0">
			AND us.id = #{usId}
		</if>
		GROUP BY createTime
	</select>


	<!--================================================================-->
	<select id="getValidOrderTotalAndCountByCreateTimeDay" resultType="com.wanhutong.backend.modules.biz.entity.dto.BizOrderStatisticsDto">
		SELECT
		sum(total_detail + total_exp + freight) AS totalMoney,
		sum(receive_total)  AS receiveTotal,
		count(1) AS orderCount,
		office.id AS officeId,
		office.name AS officeName,
		(SELECT
		sum(detail1.buy_price * detail1.ord_qty)
		FROM
		biz_order_header AS header1
		LEFT JOIN biz_custom_center_consultant AS consultant1 ON consultant1.cust_id = header1.cust_id
		LEFT JOIN sys_office AS office1 ON consultant1.center_id = office1.id
		LEFT JOIN biz_order_detail AS detail1 ON detail1.order_id = header1.id
		WHERE office.id = office1.id AND header1.order_type != 4 AND detail1.status = 1
		AND (<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
		biz_status != #{item.state}
		</foreach>
		OR (biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where header1.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		AND
		date_format(header1.create_time, '%Y-%m-%d') = #{day}
		GROUP BY office.id)  AS buyPrice
		FROM biz_order_header AS header
		LEFT JOIN biz_custom_center_consultant AS consultant ON consultant.cust_id = header.cust_id
		LEFT JOIN sys_office AS office ON consultant.center_id = office.id
		WHERE
		header.order_type != 4
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where header.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		and
		(<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
		biz_status != #{item.state}
	</foreach>
		OR (biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
		AND date_format(header.create_time, '%Y-%m-%d') = #{day}
		AND office.type = #{officeType}
		GROUP BY office.id
	</select>

	<select id="getProductStatisticDataDay" resultType="com.wanhutong.backend.modules.biz.entity.dto.BizProductStatisticsDto">
		SELECT DISTINCT
		sum(oh.total_detail + oh.total_exp + oh.freight) AS totalMoney,
		sum(receive_total) AS receiveTotal,
		od.sku_id AS skuId, pi.name, pi.item_no AS itemNo, pi.vendor_name AS vendorName, ss.sale_price AS salePrice, count(1) as count,
		(SELECT count(1) FROM biz_prod_view_log AS pvLog WHERE pvLog.prod_id = si.prod_id AND date_format(pvLog.create_time, '%Y-%m-%d') = #{day}) AS clickCount
		from biz_order_header oh, biz_order_detail od,biz_sku_info si,biz_product_info pi,biz_op_shelf_sku ss, biz_custom_center_consultant ccc
		WHERE oh.id = od.order_id
		and si.id = od.sku_id
		and si.prod_id = pi.id
		<if test="variId != null and variId != 0">
			and pi.vari_id = #{variId}
		</if>
		and oh.order_type != 4
		and oh.status = 1
		and ccc.status = 1
		and ccc.cust_id = oh.cust_id
		and oh.`status` = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL}
		and si.`status` = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL}
		and pi.`status` = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL}
		and ss.`status` = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL}
		and ss.sku_id = si.id
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where oh.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		AND date_format(oh.create_time, '%Y-%m-%d') = #{day}
		<if test="purchasingId != null and purchasingId != 0">
			AND ccc.center_id = #{purchasingId}
		</if>
		GROUP BY si.prod_id
		ORDER BY count DESC
		LIMIT 10
	</select>

	<select id="getUserStatisticDataDay" resultType="com.wanhutong.backend.modules.biz.entity.dto.BizUserStatisticsDto">
		SELECT s.name,count(1) as count
		FROM biz_custom_center_consultant c, sys_office s
		WHERE c.cust_id = ANY (
		SELECT s1.id
		from sys_office AS s1, sys_user AS u1
		where s1.id = u1.company_id
		and c.status = 1
		AND s1.type = 6
		AND date_format(s1.create_date, '%Y-%m-%d') = #{day}
		AND s1.status = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL}
		AND u1.status = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL})
		AND c.status = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL}
		AND s.status = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL} and s.id = c.center_id
		and s.TYPE =8
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where c.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		GROUP BY center_id
	</select>

	<select id="getUserSaleStatisticDataDay" resultType="com.wanhutong.backend.modules.biz.entity.dto.BizUserSaleStatisticsDto">
		SELECT
		sum(oh.total_detail + oh.total_exp + oh.freight) AS totalMoney,
		sum(receive_total) AS receiveTotal,
		count(1) AS orderCount,
		us.name AS name,
		us.id AS usId,
		date_format(oh.create_time, '%Y-%m-%d') AS createTime
		FROM biz_order_header oh
		LEFT JOIN	sys_office off ON off.id = oh.cust_id
		LEFT JOIN biz_custom_center_consultant ccc ON ccc.cust_id = off.id
		LEFT JOIN sys_user us ON us.id = ccc.consultant_id
		WHERE
		oh.order_type != 4
		and oh.status = 1
		and ccc.status = 1
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where oh.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		and	oh.`status` = 1
		AND (<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
		biz_status != #{item.state}
	</foreach>
		OR (biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
		<if test="day != null and day != ''">
			AND date_format(oh.create_time, '%Y-%m-%d') = #{day}
		</if>
		<if test="purchasingId != null and purchasingId != 0">
			AND us.office_id = #{purchasingId}
		</if>
		<if test="usId != null and usId != 0">
			AND us.id = #{usId}
		</if>
		GROUP BY us.`id`
	</select>

	<select id="getSingleUserSaleStatisticDataDay" resultType="com.wanhutong.backend.modules.biz.entity.dto.BizUserSaleStatisticsDto">
		SELECT
		sum(oh.total_detail + oh.total_exp + oh.freight) AS totalMoney,
		sum(receive_total) AS receiveTotal,
		count(1) AS orderCount,
		us.name AS name,
		us.id AS usId,
		date_format(oh.create_time, '%Y-%m-%d') AS createTime
		FROM biz_order_header oh
		LEFT JOIN	sys_office off ON off.id = oh.cust_id
		LEFT JOIN biz_custom_center_consultant ccc ON ccc.cust_id = off.id
		LEFT JOIN sys_user us ON us.id = ccc.consultant_id
		WHERE
		oh.order_type != 4
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where oh.cust_id = ta.object_id
		and oh.status = 1
		and ccc.status = 1
		and ta.object_name = 'sys_office'
		)
		and	oh.`status` = 1
		AND (<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
		biz_status != #{item.state}
	</foreach>
		OR (biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
		<if test="day != null and day != ''">
			AND date_format(oh.create_time, '%Y-%m-%d') = #{day}
		</if>
		<if test="purchasingId != null and purchasingId != 0">
			AND us.office_id = #{purchasingId}
		</if>
		<if test="usId != null and usId != 0">
			AND us.id = #{usId}
		</if>
		GROUP BY createTime
	</select>
	<!--================================================================-->
	<!--计算成本-->
	<select id="getValidOrderTotalAndCountByCreateTimeBetween" resultType="com.wanhutong.backend.modules.biz.entity.dto.BizOrderStatisticsDto">
		SELECT
		sum(total_detail + total_exp + freight) AS totalMoney,
		sum(receive_total)  AS receiveTotal,
		count(1) AS orderCount,
		office.id AS officeId,
		office.name AS officeName,
		(SELECT
		sum(detail1.buy_price * detail1.ord_qty)
		FROM
		biz_order_header AS header1
		LEFT JOIN biz_custom_center_consultant AS consultant1 ON consultant1.cust_id = header1.cust_id
		LEFT JOIN sys_office AS office1 ON consultant1.center_id = office1.id
		LEFT JOIN biz_order_detail AS detail1 ON detail1.order_id = header1.id
		WHERE office.id = office1.id AND header1.order_type != 4 and header1.order_type != 6  AND detail1.status = 1
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where header1.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		AND (<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
		biz_status != #{item.state}
		</foreach>
		OR (biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
		AND
		header1.create_time BETWEEN #{startDate} AND #{endDate}
		GROUP BY office.id) AS buyPrice
		FROM biz_order_header AS header
		LEFT JOIN biz_custom_center_consultant AS consultant ON consultant.cust_id = header.cust_id
		LEFT JOIN sys_office AS office ON consultant.center_id = office.id
		WHERE
		header.order_type != 4
		and header.order_type != 6
		and header.status = 1
		and consultant.status = 1
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where header.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		and
		(<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
		biz_status != #{item.state}
	</foreach>
		OR (biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
		AND header.create_time BETWEEN #{startDate} AND #{endDate}
		AND office.type = #{officeType}
		GROUP BY office.id
	</select>

	<select id="getProductStatisticDataBetween" resultType="com.wanhutong.backend.modules.biz.entity.dto.BizProductStatisticsDto">
		SELECT DISTINCT
		sum(oh.total_detail + oh.total_exp + oh.freight) AS totalMoney,
		sum(receive_total) AS receiveTotal,
		od.sku_id AS skuId, pi.name,
		pi.item_no AS itemNo,
		pi.vendor_name AS vendorName,
		ss.sale_price AS salePrice,
		count(1) as count,
		(SELECT count(1) FROM biz_prod_view_log AS pvLog WHERE pvLog.prod_id = si.prod_id AND pvLog.create_time BETWEEN #{startDate} AND #{endDate}) AS clickCount
		from biz_order_header oh, biz_order_detail od,biz_sku_info si,biz_product_info pi,biz_op_shelf_sku ss, biz_custom_center_consultant ccc
		WHERE oh.id = od.order_id
		and si.id = od.sku_id
		and si.prod_id = pi.id
		<if test="variId != null and variId != 0">
			and pi.vari_id = #{variId}
		</if>
		and oh.order_type != 4
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where oh.cust_id = ta.object_id
		and oh.status = 1
		and ccc.status = 1
		and ta.object_name = 'sys_office'
		)
		and ccc.cust_id = oh.cust_id
		and oh.`status` = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL}
		and si.`status` = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL}
		and pi.`status` = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL}
		and ss.`status` = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL}
		and ss.sku_id = si.id
		AND oh.create_time BETWEEN #{startDate} AND #{endDate}
		<if test="purchasingId != null and purchasingId != 0">
			AND ccc.center_id = #{purchasingId}
		</if>
		GROUP BY si.prod_id
		<choose>
			<when test="type !=null and type != '' and type == 7">
				ORDER BY clickCount DESC
			</when>
			<when test="type !=null and type != '' and type == 1">
				ORDER BY totalMoney DESC
			</when>
			<otherwise>
				ORDER BY count DESC
			</otherwise>
		</choose>
		LIMIT 10
	</select>

	<select id="skuTendencyDataBetween" resultType="com.wanhutong.backend.modules.biz.entity.dto.BizProductStatisticsDto">
		SELECT DISTINCT
		sum(oh.total_detail + oh.total_exp + oh.freight) AS totalMoney,
		sum(receive_total) AS receiveTotal,
		pi.id                                        AS productId,
		od.sku_id AS skuId, pi.name, pi.item_no AS itemNo, pi.vendor_name AS vendorName, ss.sale_price AS salePrice, count(1) as count,
		(SELECT count(1) FROM biz_prod_view_log AS pvLog WHERE pvLog.prod_id = si.prod_id
		<if test="timeType == 'year'">
			and date_format(pvLog.create_time, '%Y-%m') = date_format(oh.create_time, '%Y-%m')
		</if>
		<if test="timeType != 'year'">
			and date_format(pvLog.create_time, '%Y-%m-%d') = date_format(oh.create_time, '%Y-%m-%d')
		</if>
		)
		AS clickCount,
		<if test="timeType == 'year'">
			date_format(oh.create_time, '%Y-%m') AS createTime
		</if>
		<if test="timeType != 'year'">
			date_format(oh.create_time, '%Y-%m-%d') AS createTime
		</if>
		from biz_order_header oh, biz_order_detail od,biz_sku_info si,biz_product_info pi,biz_op_shelf_sku ss, biz_custom_center_consultant ccc
		WHERE oh.id = od.order_id
		and si.id = od.sku_id
		and si.prod_id = pi.id
		<if test="variId != null and variId != 0">
			and pi.vari_id = #{variId}
		</if>
		and oh.order_type != 4
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where oh.cust_id = ta.object_id
		and oh.status = 1
		and ccc.status = 1
		and ta.object_name = 'sys_office'
		)
		and ccc.cust_id = oh.cust_id
		and oh.`status` = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL}
		and si.`status` = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL}
		and pi.`status` = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL}
		and ss.`status` = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL}
		and ss.sku_id = si.id
		AND oh.create_time BETWEEN #{startDate} AND #{endDate}
		<if test="purchasingId != null and purchasingId != 0">
			AND ccc.center_id = #{purchasingId}
		</if>
		<if test="itemNo != null and itemNo != ''">
			AND pi.item_no = #{itemNo}
		</if>
		GROUP BY createTime, pi.id
		<choose>
			<when test="type !=null and type != null and type == '7'">
				ORDER BY clickCount DESC
			</when>
			<when test="type !=null and type != '' and type == 1">
				ORDER BY totalMoney DESC
			</when>
			<otherwise>
				ORDER BY count DESC
			</otherwise>
		</choose>
	</select>

	<select id="getUserStatisticDataBetween" resultType="com.wanhutong.backend.modules.biz.entity.dto.BizUserStatisticsDto">
		SELECT s.name,count(1) as count
		FROM biz_custom_center_consultant c, sys_office s
		WHERE c.cust_id = ANY (
		SELECT s1.id
		from sys_office AS s1, sys_user AS u1
		where s1.id = u1.company_id
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where c.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		AND s1.type = 6
		AND s1.create_date BETWEEN #{startDate} AND #{endDate}
		AND s1.status = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL}
		AND u1.status = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL})
		AND c.status = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL}
		AND s.status = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL} and s.id = c.center_id
		and s.TYPE =8
		GROUP BY center_id
	</select>

	<select id="getUserSaleStatisticDataBetween" resultType="com.wanhutong.backend.modules.biz.entity.dto.BizUserSaleStatisticsDto">
		SELECT
		sum(oh.total_detail + oh.total_exp + oh.freight) AS totalMoney,
		sum(receive_total) AS receiveTotal,
		count(1) AS orderCount,
		us.name AS name,
		us.id AS usId,
		date_format(oh.create_time, '%Y-%m-%d') AS createTime,
		(SELECT sum(detail1.buy_price * detail1.ord_qty)
		FROM biz_order_header AS header1
		LEFT JOIN biz_custom_center_consultant AS consultant1 ON consultant1.cust_id = header1.cust_id
		LEFT JOIN biz_order_detail AS detail1 ON detail1.order_id = header1.id
		LEFT JOIN sys_user us1 ON consultant1.consultant_id = us1.id
		WHERE us.id = us1.id AND header1.order_type != 4 AND detail1.status = 1
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where header1.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		AND header1.status = 1
		AND us1.status = 1
		AND consultant1.status = 1
		AND
		(<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
		header1.biz_status != #{item.state}
	</foreach>
		OR (header1.biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
		AND header1.create_time BETWEEN #{startDate} AND  #{endDate}
		GROUP BY us1.id)   AS buyPrice
		FROM biz_order_header oh
		LEFT JOIN	sys_office off ON off.id = oh.cust_id
		LEFT JOIN biz_custom_center_consultant ccc ON ccc.cust_id = off.id
		LEFT JOIN sys_user us ON us.id = ccc.consultant_id
		WHERE
		oh.order_type != 4
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where oh.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		and oh.`status` = 1
		AND (<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
		biz_status != #{item.state}
	</foreach>
		OR (biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
		AND oh.create_time BETWEEN #{startDate} AND  #{endDate}
		<if test="purchasingId != null and purchasingId != 0">
			AND us.office_id = #{purchasingId}
		</if>
		<if test="usId != null and usId != 0">
			AND us.id = #{usId}
		</if>
		GROUP BY us.`id`
	</select>

	<select id="getSingleUserSaleStatisticDataBetween" resultType="com.wanhutong.backend.modules.biz.entity.dto.BizUserSaleStatisticsDto">
		SELECT
		sum(oh.total_detail + oh.total_exp + oh.freight) AS totalMoney,
		sum(receive_total) AS receiveTotal,
		count(1) AS orderCount,
		us.name AS name,
		us.id AS usId,
		date_format(oh.create_time, '%Y-%m-%d') AS createTime
		FROM biz_order_header oh
		LEFT JOIN	sys_office off ON off.id = oh.cust_id
		LEFT JOIN biz_custom_center_consultant ccc ON ccc.cust_id = off.id
		LEFT JOIN sys_user us ON us.id = ccc.consultant_id
		WHERE
		oh.order_type != 4
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where oh.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		and oh.`status` = 1
		AND (<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
		biz_status != #{item.state}
	</foreach>
		OR (biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
		AND oh.create_time BETWEEN #{startDate} AND #{endDate}
		<if test="purchasingId != null and purchasingId != 0">
			AND us.office_id = #{purchasingId}
		</if>
		<if test="usId != null and usId != 0">
			AND us.id = #{usId}
		</if>
		GROUP BY createTime
	</select>

	<!--=====================================================================================-->
	<select id="getAllUserStatisticDataPlatform"
			resultType="com.wanhutong.backend.modules.biz.entity.dto.BizUserStatisticsDto">
		SELECT
  		count(1)                                AS count,
  		date_format(so.create_date, '%Y-%m-%d') AS createDate
		FROM
  		sys_office so
		WHERE so.create_date BETWEEN #{startDate} AND #{endDate}
      	AND so.type = 6
      	AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where so.id = ta.object_id
		and ta.object_name = 'sys_office'
		)
      	AND so.`status` = 1
		GROUP BY createDate
	</select>
	<select id="getUserStatisticDataPlatform" resultType="com.wanhutong.backend.modules.biz.entity.dto.BizUserStatisticsDto">
		SELECT count(1) AS count,
		<if test="type == null or type == 0">
			-- 			date_format(so.create_date, '%Y-%m') AS createDate
			CASE date_format(so.create_date, '%Y-%m')
			WHEN '2017-06'
			THEN '2017-09'
			WHEN '2017-07'
			THEN '2017-10'
			WHEN '2017-08'
			THEN '2017-09'
			ELSE date_format(so.create_date, '%Y-%m')
			END   createDate
		</if>
		<if test="type == 1">
			date_format(so.create_date, '%Y-%m-%d') AS createDate
		</if>
		FROM sys_office o, sys_user us, biz_custom_center_consultant cc,sys_office so
		WHERE o.id = us.company_id
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where cc.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		<if test="type == 1">
			AND date_format(so.create_date, '%Y-%m') = #{month}
		</if>
		<if test="centerType == null or centerType == 0">
			and o.type in (8, 10, 11)
		</if>
		<if test="centerType != null and centerType != 0">
			and o.type = #{centerType}
		</if>
		and cc.consultant_id = us.id
		and so.id = cc.cust_id
		and so.`status` = 1
		and o.status = 1
		and us.`status` = 1
		and cc.`status` = 1
		GROUP BY createDate
	</select>

	<select id="getAllValidOrderTotalAndCount" resultType="com.wanhutong.backend.modules.biz.entity.dto.BizOrderStatisticsDto">
		select  count(1) as orderCount,
		SUM(oh.total_detail + oh.total_exp + oh.freight) AS totalMoney,
		sum(receive_total) AS receiveTotal,
		(SELECT sum(detail1.buy_price * detail1.ord_qty)
		FROM biz_order_header AS header1
		LEFT JOIN biz_custom_center_consultant AS consultant1 ON consultant1.cust_id = header1.cust_id
		LEFT JOIN sys_office AS office1 ON consultant1.center_id = office1.id
		LEFT JOIN biz_order_detail AS detail1 ON detail1.order_id = header1.id
		WHERE header1.order_type != 4
		and header1.`status` = 1
		AND detail1.status = 1
		and office1.`status` = 1
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where header1.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		<if test="centerType == null or centerType == 0">
			and office1.type in (8, 10, 11)
		</if>
		<if test="centerType != null and centerType != 0">
			and office1.type = #{centerType}
		</if>
		AND
		(<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
		oh.biz_status != #{item.state}
		</foreach>
		OR (biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
		AND
		header1.create_time BETWEEN #{startDate} AND #{endDate}
		)   AS buyPrice,

		<if test="type == null or type == 0">
			--             date_format(oh.create_time, '%Y-%m') AS createDate
			CASE date_format(oh.create_time, '%Y-%m')
			WHEN '2017-06'
			THEN '2017-09'
			WHEN '2017-07'
			THEN '2017-10'
			WHEN '2017-08'
			THEN '2017-09'
			ELSE date_format(oh.create_time, '%Y-%m')
			END   createDate
		</if>
		<if test="type == 1">
			date_format(oh.create_time, '%Y-%m-%d') AS createDate
		</if>

		FROM biz_order_header oh
		LEFT JOIN biz_custom_center_consultant AS consultant ON consultant.cust_id = oh.cust_id
		LEFT JOIN sys_office AS office ON consultant.center_id = office.id
		WHERE oh.`status` = 1
		<if test="centerType == null or centerType == 0">
			and office.type in (8, 10, 11)
		</if>
		<if test="centerType != null and centerType != 0">
			and office.type = #{centerType}
		</if>
        AND oh.create_time BETWEEN #{startDate} AND #{endDate}
		and (<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
		oh.biz_status != #{item.state}
		and not exists(
		select 1
		from sys_test_account ta
		where oh.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
	</foreach>
		OR (biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
		GROUP BY createDate
	</select>



	<select id="getValidOrderTotalAndCount" resultType="com.wanhutong.backend.modules.biz.entity.dto.BizOrderStatisticsDto">
		SELECT count(1) as orderCount,
		sum(oh.total_detail + oh.total_exp + oh.freight) AS totalMoney,
		sum(receive_total) AS receiveTotal,
		(SELECT sum(detail1.buy_price * detail1.ord_qty)
		FROM biz_order_header AS header1
		LEFT JOIN biz_custom_center_consultant AS consultant1 ON consultant1.cust_id = header1.cust_id
		LEFT JOIN sys_office AS office1 ON consultant1.center_id = office1.id
		LEFT JOIN biz_order_detail AS detail1 ON detail1.order_id = header1.id
		WHERE header1.order_type != 4
		and header1.`status` = 1
		AND detail1.status = 1
		and office1.`status` = 1
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where header1.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		<if test="centerType == null or centerType == 0">
			and office1.type in (8, 10, 11)
		</if>
		<if test="centerType != null and centerType != 0">
			and office1.type = #{centerType}
		</if>
		AND
		(<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
		header1.biz_status != #{item.state}
	</foreach>
		OR (biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
		AND
		header1.create_time BETWEEN #{startDate} AND #{endDate}
		<if test="type == 1">
		AND date_format(oh.create_time, '%Y-%m-%d') = date_format(header1.create_time, '%Y-%m-%d')
		</if>
		<if test="type != 1">
		AND date_format(oh.create_time, '%Y-%m') = date_format(header1.create_time, '%Y-%m')
		</if>

		<if test="type == 1">
			GROUP BY date_format(header1.create_time, '%Y-%m-%d')
		</if>
		<if test="type != 1">
			GROUP BY date_format(header1.create_time, '%Y-%m')
		</if>
		)  AS buyPrice,
		<if test="type == null or type == 0">
			CASE date_format(oh.create_time, '%Y-%m')
			WHEN '2017-06'
			THEN '2017-09'
			WHEN '2017-07'
			THEN '2017-10'
			WHEN '2017-08'
			THEN '2017-09'
			ELSE date_format(oh.create_time, '%Y-%m')
			END   createDate
		</if>
		<if test="type == 1">
			date_format(oh.create_time, '%Y-%m-%d') AS createDate
		</if>
		from biz_custom_center_consultant cc, sys_user u, biz_order_header oh, sys_office so
		WHERE cc.consultant_id = u.id
		and oh.cust_id = cc.cust_id
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where oh.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		and so.id = u.company_id
		<if test="centerType == null or centerType == 0">
			and so.type in (8, 10, 11)
		</if>
		<if test="centerType != null and centerType != 0">
			and so.type = #{centerType}
		</if>
		and (<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
		oh.biz_status != #{item.state}
	</foreach>
		OR (biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
		and oh.`status` = 1
		<if test="orderType != null and orderType != 0">
			and oh.`order_type` = #{orderType}
		</if>
		and u.`status` = 1
		and cc.`status` = 1
		<if test="officeId != null and officeId != 0">
			and so.id = #{officeId}
		</if>
		<if test="userId != null and userId != 0">
			and u.id = #{userId}
		</if>
		AND oh.create_time BETWEEN #{startDate} AND #{endDate}
		GROUP BY createDate
	</select>

	<select id="getUserTableStatisticData" resultType="com.wanhutong.backend.modules.biz.entity.dto.BizUserSaleStatisticsDto">
		SELECT
		sum(total_detail + total_exp + freight) AS totalMoney,
		sum(receive_total) AS receiveTotal,
		count(1) AS orderCount,
		(SELECT count(1) FROM biz_custom_center_consultant cc
		WHERE cc.consultant_id = us.id
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where cc.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		))as custCount,
		us.name AS name,
		cent.name AS centName
		FROM biz_order_header oh
		LEFT JOIN	sys_office off ON off.id = oh.cust_id
		LEFT JOIN biz_custom_center_consultant ccc ON ccc.cust_id = off.id
		LEFT JOIN sys_user us ON us.id = ccc.consultant_id
		LEFT JOIN sys_office cent ON cent.id = us.office_id
		WHERE
		oh.`status` = 1
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where oh.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		AND (<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
		biz_status != #{item.state}
	</foreach>
		OR (biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
		AND date_format(oh.create_time, '%Y-%m') = #{month}
		<if test="purchasingId != null and purchasingId != 0">
			AND us.office_id = #{purchasingId}
		</if>
		GROUP BY us.`id`
	</select>

	<select id="getSkuStatisticDataBetween" resultType="java.lang.Integer">
		SELECT
		count(1) AS upSkuCount
		FROM
		biz_sku_info sku
		LEFT JOIN biz_product_info pi ON sku.prod_id = pi.id
		LEFT JOIN biz_variety_info vi ON vi.id = pi.vari_id
		WHERE
		<if test="variId != null and variId != 0">
			vi.id = #{variId} AND
		</if>
		sku.create_time BETWEEN #{startDate}
		AND #{endDate}
		AND sku.status = 1
	</select>
	<!-- 按月查询全部商品新增数量 -->
	<select id="getSkuAllStatisticData" parameterType="Integer" resultType="com.wanhutong.backend.modules.biz.entity.dto.BizProductStatisticsDto">
		SELECT count(1) AS upSkuCount,
		CASE date_format(bsi.create_time, '%Y-%m')
		WHEN '2017-04'
		THEN '2017-09'
		WHEN '2017-05'
		THEN '2017-10'
		WHEN '2017-06'
		THEN '2017-11'
		when '2017-07'
		then '2017-12'
		when '2017-08'
		then '2018-01'
		ELSE date_format(bsi.create_time, '%Y-%m')
		END monthDate
		FROM biz_sku_info bsi
		LEFT JOIN biz_product_info pi ON bsi.prod_id = pi.id
		LEFT JOIN biz_variety_info vi ON vi.id = pi.vari_id
		WHERE bsi.`status` = 1
		<if test="variId != null and variId != 0">
			AND vi.id = #{variId}
		</if>
		GROUP BY monthDate
	</select>

	<select id="platformDataOverview" resultType="com.wanhutong.backend.modules.biz.entity.dto.BizPlatformDataOverviewDto">
SELECT
  count(1)                                             AS orderCount,
  sum(oh.total_detail + oh.total_exp + oh.freight)     AS accumulatedSalesMonth,
  sum(receive_total)                                   AS receiveTotal,
  (SELECT sum(detail1.buy_price * detail1.ord_qty)
   FROM biz_order_header AS header1 LEFT JOIN biz_custom_center_consultant AS consultant1
       ON consultant1.cust_id = header1.cust_id
     LEFT JOIN sys_office AS office1 ON consultant1.center_id = office1.id
     LEFT JOIN biz_order_detail AS detail1 ON detail1.order_id = header1.id
   WHERE office1.id = so.id AND header1.order_type != 4 AND header1.order_type != 6 AND header1.`status` = 1 AND detail1.status = 1 AND
         NOT EXISTS(SELECT 1
                    FROM sys_test_account ta
                    WHERE header1.cust_id = ta.object_id AND ta.object_name = 'sys_office') AND
		(<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
		biz_status != #{item.state}
		</foreach>
		OR (biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
		AND header1.create_time BETWEEN #{startDate} AND #{endDate}
		AND date_format(oh.create_time, '%Y-%m') = date_format(header1.create_time, '%Y-%m')) AS buyPrice,
  CASE date_format(oh.create_time, '%Y-%m')
  WHEN '2017-06'
    THEN '2017-09'
  WHEN '2017-07'
    THEN '2017-10'
  WHEN '2017-08'
    THEN '2017-09'
  ELSE date_format(oh.create_time, '%Y-%m') END           createDate,
  so.id AS officeId,
  so.name AS name,
  so.type AS officeType,
		(SELECT region.name
		FROM sys_region AS region
		LEFT JOIN common_location AS location ON location.province_id = region.id
		LEFT JOIN sys_office_address AS oAddress ON oAddress.addr_id = location.id
		LEFT JOIN sys_office AS office  ON oAddress.office_id = office.id
		WHERE office.id = so.id AND oAddress.type = 2 limit 1) AS province,
		(SELECT
		SUM(bsi.buy_price * s.stock_qty)
		FROM biz_inventory_info ii ,biz_inventory_sku s, biz_sku_info bsi
		WHERE ii.id = s.inv_id
		and bsi.id = s.sku_id
		and ii.`status` = 1
		and s.`status` = 1
		and bsi.`status` = 1
		AND ii.cust_id = so.id
		GROUP BY ii.cust_id) AS stockAmount
FROM sys_office so, biz_custom_center_consultant cc, sys_user u, biz_order_header oh
	WHERE cc.consultant_id = u.id AND oh.cust_id = cc.cust_id
		AND NOT EXISTS(SELECT 1 FROM sys_test_account ta WHERE oh.cust_id = ta.object_id  AND ta.object_name = 'sys_office')
		AND so.id = u.office_id
		AND so.type IN (8, 10, 11)
		AND
		(<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
		biz_status != #{item.state}
	</foreach>
		OR (biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
      AND oh.`status` = 1 AND u.`status` = 1 AND cc.`status` = 1 AND so.id in
		(select id from sys_office where type IN (8, 10, 11) and status = 1)
		AND oh.create_time BETWEEN #{startDate} AND #{endDate}
		GROUP BY so.id

	</select>

	<select id="singlePlatformDataOverview" resultType="com.wanhutong.backend.modules.biz.entity.dto.BizPlatformDataOverviewDto">
        SELECT
        count(1)                                             AS orderCount,
        sum(oh.total_detail + oh.total_exp + oh.freight)     AS accumulatedSalesMonth,
        sum(receive_total)                                   AS receiveTotal,
        (SELECT sum(detail1.buy_price * detail1.ord_qty)
        FROM biz_order_header AS header1
        LEFT JOIN biz_custom_center_consultant AS consultant1  ON consultant1.cust_id = header1.cust_id
        LEFT JOIN sys_office AS office1 ON consultant1.center_id = office1.id
        LEFT JOIN biz_custom_center_consultant AS cc1 ON  header1.cust_id = cc1.cust_id
        LEFT JOIN sys_user AS u1 ON cc1.consultant_id = u1.id
        LEFT JOIN biz_order_detail AS detail1 ON detail1.order_id = header1.id
        WHERE u1.id = u.id AND header1.order_type != 4 AND header1.order_type != 6 AND header1.`status` = 1 AND detail1.status = 1 AND
        NOT EXISTS(SELECT 1
        FROM sys_test_account ta
        WHERE header1.cust_id = ta.object_id AND ta.object_name = 'sys_office') AND
        (<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
        biz_status != #{item.state}
    </foreach>
        OR (biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
        AND header1.create_time BETWEEN #{startDate} AND #{endDate}
        AND date_format(oh.create_time, '%Y-%m') = date_format(header1.create_time, '%Y-%m')) AS buyPrice,
        CASE date_format(oh.create_time, '%Y-%m')
        WHEN '2017-06'
        THEN '2017-09'
        WHEN '2017-07'
        THEN '2017-10'
        WHEN '2017-08'
        THEN '2017-09'
        ELSE date_format(oh.create_time, '%Y-%m') END           createDate,
        so.id AS officeId,
        u.name AS name,
        so.type AS officeType,
        u.id AS userId
        FROM sys_office so, biz_custom_center_consultant cc, sys_user u, biz_order_header oh
        WHERE cc.consultant_id = u.id AND oh.cust_id = cc.cust_id
        AND NOT EXISTS(SELECT 1 FROM sys_test_account ta WHERE oh.cust_id = ta.object_id  AND ta.object_name = 'sys_office')
        AND so.id = u.office_id
        AND so.type IN (8, 10, 11)
        AND
        (<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
        biz_status != #{item.state}
    </foreach>
        OR (biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
        AND oh.`status` = 1 AND u.`status` = 1 AND cc.`status` = 1 AND so.id in
        (select id from sys_office where type IN (8, 10, 11) and status = 1)
        AND oh.create_time BETWEEN #{startDate} AND #{endDate}
        and so.id = #{officeId}
        GROUP BY u.id
    </select>
    <select id="getStockAmountByOfficeId" resultType="BigDecimal">
		SELECT
		SUM(bsi.buy_price * s.stock_qty)
		FROM biz_inventory_info ii ,biz_inventory_sku s, biz_sku_info bsi
		WHERE ii.id = s.inv_id
		and bsi.id = s.sku_id
		and ii.`status` = 1
		and s.`status` = 1
		and bsi.`status` = 1
		AND ii.cust_id = #{id}
    </select>

	<select id="findOrderCountFrequency" resultType="Integer">
		SELECT
  		count(1) AS orderCount
		FROM biz_order_header AS oh
		WHERE oh.cust_id = #{custId}
		AND (<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
				biz_status != #{item.state}
			</foreach>
			OR (biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
		GROUP BY
  		date_format(oh.create_time, '%Y-%m')
    </select>

	<!-- 订单采购列表  -->
	<!--<select id="headerFindList" resultType="BizOrderHeader">-->
		<!--SELECT-->
        <!--a.id AS "id",-->
        <!--a.order_num AS "orderNum",-->
        <!--a.order_type AS "orderType",-->
        <!--a.cust_id AS "customer.id",-->
        <!--so.name as "customer.name",-->
        <!--a.total_detail AS "totalDetail",-->
        <!--a.receive_total as "receiveTotal",-->
        <!--a.total_exp AS "totalExp",-->
        <!--a.freight AS "freight",-->
        <!--a.inv_status AS "invStatus",-->
        <!--a.biz_status AS "bizStatus",-->
        <!--a.biz_type as "bizType",-->
        <!--a.plateform_id AS "platformInfo.id",-->
        <!--bpi.name as "platformInfo.name",-->
        <!--a.ship_to_addr AS "bizLocation.id",-->
        <!--a.status AS "delFlag",-->
        <!--a.create_id AS "createBy.id",-->
        <!--su.name as "createBy.name",-->
        <!--a.create_time AS "createDate",-->
        <!--a.u_version AS "uVersion",-->
        <!--a.update_id AS "updateBy.id",-->
        <!--us.name as "updateBy.name",-->
        <!--a.update_time AS "updateDate"-->
		<!--FROM biz_order_header a-->
		<!--LEFT JOIN biz_order_detail od ON od.order_id = a.id-->
        <!--left join sys_office so on a.cust_id=so.id-->
        <!--left join sys_user su on a.create_id=su.id-->
        <!--left join sys_user us on a.update_id=us.id-->
        <!--left join biz_cms_platform_info bpi on a.plateform_id=bpi.id-->
		<!--<where>-->
			<!--a.status=#{DEL_FLAG_NORMAL}-->
			<!--and od.status=#{DEL_FLAG_NORMAL}-->
			<!--and (od.suply_id=0 or od.suply_id=721)-->
			<!--<if test="bizStatusStart !=null and bizStatusEnd !=null">-->
				<!--AND a.biz_status BETWEEN #{bizStatusStart} and #{bizStatusEnd}-->
			<!--</if>-->
			<!--<if test="orderNum != null and orderNum != ''">-->
				<!--AND a.order_num LIKE-->
				<!--<if test="dbName == 'oracle'">'%'||#{orderNum}||'%'</if>-->
				<!--<if test="dbName == 'mssql'">'%'+#{orderNum}+'%'</if>-->
				<!--<if test="dbName == 'mysql'">concat('%',#{orderNum},'%')</if>-->
			<!--</if>-->
			<!--<if test="customer != null and customer.id != null and customer.id!=''">-->
				<!--AND a.cust_id LIKE-->
				<!--<if test="dbName == 'oracle'">'%'||#{customer.id}||'%'</if>-->
				<!--<if test="dbName == 'mssql'">'%'+#{customer.id}+'%'</if>-->
				<!--<if test="dbName == 'mysql'">concat('%',#{customer.id},'%')</if>-->
			<!--</if>-->
			<!--<if test="sqlMap != null and sqlMap.order != null and sqlMap.order != ''">-->
				<!--${sqlMap.order}-->
			<!--</if>-->
		<!--</where>-->
		<!--<choose>-->
			<!--<when test="page !=null and page.orderBy != null and page.orderBy != ''">-->
				<!--ORDER BY ${page.orderBy}-->
			<!--</when>-->
			<!--<otherwise>-->
				<!--GROUP  BY a.id-->
			<!--</otherwise>-->
		<!--</choose>-->
		<!--ORDER BY a.update_time desc-->
	<!--</select>-->

	<select id="headerFindList" resultType="BizOrderHeader">
		SELECT
	a.id AS "id",
	a.order_num AS "orderNum",
	a.order_type AS "orderType",
	a.cust_id AS "customer.id",
	so.NAME AS "customer.name",
	a.total_detail AS "totalDetail",
	a.receive_total AS "receiveTotal",
	a.total_exp AS "totalExp",
	a.freight AS "freight",
	a.inv_status AS "invStatus",
	a.biz_status AS "bizStatus",
	a.biz_type AS "bizType",
	a.plateform_id AS "platformInfo.id",
	bpi.NAME AS "platformInfo.name",
	a.ship_to_addr AS "bizLocation.id",
		c.province_id as "bizLocation.province.id",
		province.name as "bizLocation.province.name",
		c.city_id as "bizLocation.city.id",
		city.name as "bizLocation.city.name",
		c.region_id as "bizLocation.region.id",
		reg.name as "bizLocation.region.name",
		c.address as "bizLocation.address",
	a.STATUS AS "delFlag",
	a.create_id AS "createBy.id",
	su.NAME AS "createBy.name",
	a.create_time AS "createDate",
	a.u_version AS "uVersion",
	a.update_id AS "updateBy.id",
	us.NAME AS "updateBy.name",
	a.update_time AS "updateDate" ,
	concat(cl.pcr_name, ifnull( cl.address,'')) as locationAddress,
		GROUP_CONCAT(bod.id) AS "orderDetails",
		pi.vendor_id AS "onlyVendor",
		sx.NAME AS "centersName"
FROM
	biz_order_header a
	LEFT JOIN sys_office so ON a.cust_id = so.id
	LEFT JOIN sys_user su ON a.create_id = su.id
	LEFT JOIN sys_user us ON a.update_id = us.id
	LEFT JOIN biz_cms_platform_info bpi ON a.plateform_id = bpi.id
	LEFT JOIN common_location cl on a.ship_to_addr = cl.id
	INNER JOIN biz_order_detail bod on bod.order_id = a.id
	INNER JOIN biz_sku_info bsi on bod.sku_id = bsi.id
	INNER JOIN biz_product_info pi ON bsi.prod_id = pi.id
	<!-- 订单地址 -->
		LEFT JOIN biz_order_address c ON c.id = a.ship_to_addr
		LEFT JOIN sys_region province ON c.province_id = province.id
		LEFT JOIN sys_region city ON c.city_id = city.id
		LEFT JOIN sys_region reg ON c.region_id = reg.id
	<!-- end  -->
	<!-- 采购中心 -->
		LEFT JOIN biz_custom_center_consultant ccs ON ccs.cust_id=a.cust_id
		LEFT JOIN sys_office sx ON sx.id = ccs.center_id
	<!-- end  -->
	WHERE 1=1 and a.order_type != 4
		<if test="bizStatusStart !=null and bizStatusEnd !=null">
			AND a.biz_status BETWEEN #{bizStatusStart} and #{bizStatusEnd}
		</if>
	  AND a.STATUS =#{DEL_FLAG_NORMAL}
	  AND bod.status= 1
	  AND (bod.suply_id=0 OR bod.suply_id=721)
	AND EXISTS(
		SELECT 1 from
			(SELECT
				DISTINCT a.id, pi.vendor_id
				FROM biz_order_header a,biz_order_detail bod
				LEFT JOIN biz_sku_info bsi on bod.sku_id = bsi.id
				LEFT JOIN biz_product_info pi ON bsi.prod_id = pi.id
				WHERE bod.order_id = a.id
				AND bod.status = 1
				AND  ( bod.suply_id = 0 OR bod.suply_id = 721 )
				AND a.biz_status BETWEEN 15 AND 17
				AND a.STATUS =1 ) t
		WHERE a.id = t.id
		GROUP BY id
  		HAVING  count(1) = 1
	)
		<if test="orderType != null and orderType != ''">
			AND a.order_type = #{orderType}
		</if>
		<if test="orderNum != null and orderNum != ''">
			AND a.order_num LIKE
			<if test="dbName == 'oracle'">'%'||#{orderNum}||'%'</if>
			<if test="dbName == 'mssql'">'%'+#{orderNum}+'%'</if>
			<if test="dbName == 'mysql'">concat('%',#{orderNum},'%')</if>
		</if>
		<if test="customer != null and customer.id != null and customer.id!=''">
			AND a.cust_id LIKE
			<if test="dbName == 'oracle'">'%'||#{customer.id}||'%'</if>
			<if test="dbName == 'mssql'">'%'+#{customer.id}+'%'</if>
			<if test="dbName == 'mysql'">concat('%',#{customer.id},'%')</if>
		</if>
        <if test="page != null and page.includeTestData != true">
	        AND NOT EXISTS ( SELECT 1 FROM sys_test_account ta WHERE a.cust_id = ta.object_id AND ta.object_name = 'sys_office' )
        </if>
		<if test="id != null and id != ''">
			AND a.id = #{id}
		</if>
	GROUP by a.id
    ORDER BY
	    a.update_time DESC
	</select>


	<select id="headerFindListForPhotoOrder" resultType="BizOrderHeader">
		SELECT
	a.id AS "id",
	a.order_num AS "orderNum",
	a.order_type AS "orderType",
	a.cust_id AS "customer.id",
	so.NAME AS "customer.name",
	a.total_detail AS "totalDetail",
	a.receive_total AS "receiveTotal",
	a.total_exp AS "totalExp",
	a.freight AS "freight",
	a.inv_status AS "invStatus",
	a.biz_status AS "bizStatus",
	a.biz_type AS "bizType",
	a.plateform_id AS "platformInfo.id",
	bpi.NAME AS "platformInfo.name",
	a.ship_to_addr AS "bizLocation.id",
		c.province_id as "bizLocation.province.id",
		province.name as "bizLocation.province.name",
		c.city_id as "bizLocation.city.id",
		city.name as "bizLocation.city.name",
		c.region_id as "bizLocation.region.id",
		reg.name as "bizLocation.region.name",
		c.address as "bizLocation.address",
	a.STATUS AS "delFlag",
	a.create_id AS "createBy.id",
	su.NAME AS "createBy.name",
	a.create_time AS "createDate",
	a.u_version AS "uVersion",
	a.update_id AS "updateBy.id",
	us.NAME AS "updateBy.name",
	a.update_time AS "updateDate" ,
	concat(cl.pcr_name, ifnull( cl.address,'')) as locationAddress,
		sx.NAME AS "centersName"
FROM
	biz_order_header a
	LEFT JOIN sys_office so ON a.cust_id = so.id
	LEFT JOIN sys_user su ON a.create_id = su.id
	LEFT JOIN sys_user us ON a.update_id = us.id
	LEFT JOIN biz_cms_platform_info bpi ON a.plateform_id = bpi.id
	LEFT JOIN common_location cl on a.ship_to_addr = cl.id
	<!-- 订单地址 -->
		LEFT JOIN biz_order_address c ON c.id = a.ship_to_addr
		LEFT JOIN sys_region province ON c.province_id = province.id
		LEFT JOIN sys_region city ON c.city_id = city.id
		LEFT JOIN sys_region reg ON c.region_id = reg.id
	<!-- end  -->
	<!-- 采购中心 -->
		LEFT JOIN biz_custom_center_consultant ccs ON ccs.cust_id=a.cust_id
		LEFT JOIN sys_office sx ON sx.id = ccs.center_id
	<!-- end  -->
	WHERE 1=1 and a.order_type != 4
		and a.order_type = 6
		<if test="bizStatusStart !=null and bizStatusEnd !=null">
			AND a.biz_status BETWEEN #{bizStatusStart} and #{bizStatusEnd}
		</if>
	  AND a.STATUS =#{DEL_FLAG_NORMAL}
		<if test="orderType != null and orderType != ''">
			AND a.order_type = #{orderType}
		</if>
		<if test="orderNum != null and orderNum != ''">
			AND a.order_num LIKE
			<if test="dbName == 'oracle'">'%'||#{orderNum}||'%'</if>
			<if test="dbName == 'mssql'">'%'+#{orderNum}+'%'</if>
			<if test="dbName == 'mysql'">concat('%',#{orderNum},'%')</if>
		</if>
		<if test="customer != null and customer.id != null and customer.id!=''">
			AND a.cust_id LIKE
			<if test="dbName == 'oracle'">'%'||#{customer.id}||'%'</if>
			<if test="dbName == 'mssql'">'%'+#{customer.id}+'%'</if>
			<if test="dbName == 'mysql'">concat('%',#{customer.id},'%')</if>
		</if>
        <if test="page != null and page.includeTestData != true">
	        AND NOT EXISTS ( SELECT 1 FROM sys_test_account ta WHERE a.cust_id = ta.object_id AND ta.object_name = 'sys_office' )
        </if>
	GROUP by a.id
    ORDER BY
	    a.update_time DESC
	</select>


	<!-- C端订单管理 -->
	<select id="cendfindList" resultMap="orderHeaderResult">
		SELECT
		<include refid="cendOrderHeaderColumns"/>,
		od.id AS "orderDetailList.id",
		od.unit_price AS "orderDetailList.unitPrice",
		od.ord_qty AS "orderDetailList.ordQty",
		od.sent_qty AS "orderDetailList.sentQty",
		od.line_no AS "orderDetailList.lineNo",
		si.id AS "orderDetailList.skuInfo.id",
		si.buy_price AS "orderDetailList.skuInfo.buyPrice",
		si.item_no AS "orderDetailList.skuInfo.itemNo",
		pi.vendor_name AS "orderDetailList.vendor.name"
		FROM biz_order_header a
		LEFT JOIN biz_order_detail od ON od.order_id = a.id
		LEFT JOIN biz_sku_info si ON si.id=od.sku_id
		LEFT JOIN biz_product_info pi ON pi.id = si.prod_id
		<include refid="cendOrderHeaderJoins"/>
		<where>
			1=1 and a.order_type =4
			<if test="dataStatus != null">
				and a.status = #{DEL_FLAG_NORMAL}
			</if>
			<if test="orderNum != null and orderNum != ''">
				AND a.order_num LIKE
				<if test="dbName == 'oracle'">'%'||#{orderNum}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{orderNum}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{orderNum},'%')</if>
			</if>
			<if test="bizStatus !=null">
				AND a.biz_status=#{bizStatus}
			</if>
			<if test="customer !=null and customer.id!=null and customer.id!=''">
				AND wxsu.id = #{customer.id}
			</if>
			<if test="sqlMap != null and sqlMap.order != null and sqlMap.order != ''">
				${sqlMap.order}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				GROUP  BY a.id
			</otherwise>
		</choose>
		ORDER BY a.update_time DESC
	</select>


	<select id="findUnlineOrder" resultType="BizOrderHeader">
		SELECT
		a.id AS "id",
		a.order_num AS "orderNum",
		a.order_type AS "orderType",
		a.cust_id AS "customer.id",
		a.total_detail AS "totalDetail",
		a.receive_total as "receiveTotal",
		a.total_exp AS "totalExp",
		a.freight AS "freight",
		a.update_id AS "updateBy.id",
		a.create_time AS "createDate",
		a.u_version AS "uVersion",
		a.status AS "delFlag",
		a.create_id AS "createBy.id",
		a.update_time AS "updateDate",
		a.biz_type as "bizType",
		a.inv_status AS "invStatus",
		a.plateform_id AS "platformInfo.id",
		a.biz_status AS "bizStatus",
		so.name as "custName",
		s.name as "centersName"
		FROM biz_order_header a
		LEFT JOIN biz_order_header_unline ohu on ohu.order_id = a.id
		LEFT JOIN sys_office so on so.id = a.cust_id
		LEFT JOIN biz_custom_center_consultant ccs ON ccs.cust_id=a.cust_id
		LEFT JOIN sys_office s on s.id=ccs.center_id
		WHERE a.status = 1
		AND ohu.id is not NULL
		<if test="page !=null and page.orderBy != null and page.orderBy != ''">
			ORDER BY ${page.orderBy}
		</if>
	</select>

	<!-- 客户专员查看该采购商的采购累计频次 -->
	<select id="findUserOrderCountSecond" resultType="BizOrderHeader" parameterType="BizChatRecord">
		SELECT
		count(1) AS "orderCount",
		sum(receive_total) AS "userOfficeReceiveTotal",
		str_to_date(DATE_FORMAT(oh.create_time,'%Y-%m-%d %H:%i:%s'),'%Y-%m-%d %H:%i:%s') as "userOfficeDeta",
		oh.id as "id",
		oh.ship_to_addr,
		cl.province_id as "bizLocation.province.id",
		province.name as "bizLocation.province.name",
		cl.city_id as "bizLocation.city.id",
		city.name as "bizLocation.city.name",
		cl.region_id as "bizLocation.region.id",
		reg.name as "bizLocation.region.name",
		cl.address as "bizLocation.address",
		(select count(1) from biz_chat_record as bizcr
		LEFT JOIN sys_office so ON so.id = bizcr.office_id
		LEFT JOIN sys_user su ON su.id = bizcr.user_id
		where bizcr.office_id=#{office.id} and bizcr.status=1
		and so.type=6
		<if test="ordrHeaderStartTime ==null">
			and DATE_FORMAT(bizcr.create_time,'%Y%m') = DATE_FORMAT(CURDATE(),'%Y%m')
		</if>
		<if test="ordrHeaderStartTime!=null and orderHeaderEedTime==null">
			AND bizcr.create_time &gt;= #{ordrHeaderStartTime}
		</if>
		<if test="ordrHeaderStartTime !=null and orderHeaderEedTime!=null">
			AND bizcr.create_time BETWEEN #{ordrHeaderStartTime} and #{orderHeaderEedTime}
		</if>
		<if test="sqlMap != null and sqlMap.chat != null and sqlMap.chat != ''">
			${sqlMap.chat}
		</if>
		) as "officeChatRecord"
		FROM biz_order_header AS oh
		<!--LEFT JOIN sys_office_address soa on soa.office_id=oh.cust_id and soa.status=1 and soa.default_status=1
		left join common_location cl on cl.id=soa.addr_id-->
		left join biz_order_address cl on cl.id=oh.ship_to_addr
		LEFT JOIN sys_region province ON cl.province_id = province.id
		LEFT JOIN sys_region city ON cl.city_id = city.id
		LEFT JOIN sys_region reg ON cl.region_id = reg.id
		left join biz_chat_record bcr on bcr.office_id=oh.cust_id
		WHERE oh.cust_id = #{office.id}
		and oh.order_type!=4
		<if test="ordrHeaderStartTime ==null">
			and DATE_FORMAT(oh.create_time,'%Y%m') = DATE_FORMAT(CURDATE(),'%Y%m')
		</if>
		<if test="ordrHeaderStartTime!=null and orderHeaderEedTime==null">
			AND oh.create_time &gt;= #{ordrHeaderStartTime}
		</if>
		<if test="ordrHeaderStartTime !=null and orderHeaderEedTime!=null">
			AND oh.create_time BETWEEN #{ordrHeaderStartTime} and #{orderHeaderEedTime}
		</if>
		AND NOT EXISTS (
		SELECT
		1
		FROM
		sys_test_account ta
		WHERE
		oh.cust_id = ta.object_id
		AND ta.object_name = 'sys_office'
		)
		AND (
		(
		oh.biz_status != ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@UNAPPROVE.state}
		AND oh.biz_status != ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@CANCLE.state}
		AND oh.biz_status != ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@UNPAY.state}
		)
		OR (oh.biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND
		oh.receive_total > 0)
		)
		and oh.status=1
		<!--GROUP BY
		date_format(oh.create_time, '%Y-%m')-->
	</select>


	<!-- 商品管理的 下单量 -->
	<select id="findOrderCount" resultType="BizOrderHeader">
		SELECT
			oh.id,
			bsi.item_no
		FROM
			biz_order_header oh
		LEFT JOIN biz_order_detail bod ON bod.order_id = oh.id
		LEFT JOIN biz_sku_info bsi ON bsi.id = bod.sku_id
		LEFT JOIN sys_office so ON so.id = oh.cust_id
		WHERE
			bsi. STATUS = 1
		AND bod. STATUS = 1
		and bsi.id=#{skuInfoId.id}
		AND oh.order_type != 4
		AND NOT EXISTS (
		SELECT
		1
		FROM
		sys_test_account ta
		WHERE
		oh.cust_id = ta.object_id
		AND ta.object_name = 'sys_office'
		)
		AND (
			(
			oh.biz_status != ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@UNAPPROVE.state}
			AND oh.biz_status != ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@CANCLE.state}
			AND oh.biz_status != ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@UNPAY.state}
			)
		OR (oh.biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND oh.receive_total > 0)
		)
		and oh.status=1
	</select>


	<!-- 客户专员列表的 统计 -->
	<select id="findOrderUserCount" resultType="BizOrderHeader" parameterType="BizChatRecord">
		SELECT
		(
		select count(1) FROM biz_chat_record bcr
		LEFT JOIN sys_user su on su.id=bcr.user_id and su.status=1
		left join sys_office so on so.id=bcr.office_id and so.status=1
		where
		bcr.status=1
		and su.id=#{con.id}
		and so.type=6
		<if test="ordrHeaderStartTime ==null">
			and DATE_FORMAT(bcr.create_time,'%Y%m') = DATE_FORMAT(CURDATE(),'%Y%m')
		</if>
		<if test="ordrHeaderStartTime!=null and orderHeaderEedTime==null">
			AND bcr.create_time &lt;= #{ordrHeaderStartTime}
		</if>
		<if test="ordrHeaderStartTime !=null and orderHeaderEedTime!=null">
			AND bcr.create_time BETWEEN #{ordrHeaderStartTime} and #{orderHeaderEedTime}
		</if>
		<if test="sqlMap != null and sqlMap.chat != null and sqlMap.chat != ''">
			${sqlMap.chat}
		</if>
		) as "officeChatRecord",
		count(1) AS "orderCount",
		(SELECT
		sum(bp.pay_money)
		FROM
		biz_order_header bo
		INNER JOIN biz_pay_record bp on bo.order_num = bp.order_num
		LEFT JOIN biz_custom_center_consultant bcc ON bcc.cust_id = bo.cust_id AND bcc.status = 1
		WHERE
		bo.status = 1
		AND bp.status = 1
		AND bcc.consultant_id = #{con.id}
		<if test="ordrHeaderStartTime ==null">
			and DATE_FORMAT(bp.create_time,'%Y%m') = DATE_FORMAT(CURDATE(),'%Y%m')
		</if>
		<if test="ordrHeaderStartTime!=null and orderHeaderEedTime==null">
			AND bp.create_time &lt;= #{ordrHeaderStartTime}
		</if>
		<if test="ordrHeaderStartTime !=null and orderHeaderEedTime!=null">
			AND bp.create_time BETWEEN #{ordrHeaderStartTime} and #{orderHeaderEedTime}
		</if>
		and bp.biz_status = 1
		AND bo.order_type != 4
		AND NOT EXISTS (
		SELECT 1
		FROM sys_test_account ta
		WHERE bo.cust_id = ta.object_id
		AND ta.object_name = 'sys_office'
		)
		AND ((bo.biz_status != 45
		AND bo.biz_status != 35
		AND bo.biz_status != 0)
		OR (bo.biz_status = 40
		AND bo.receive_total > 0))
		) AS "userOfficeReceiveTotal",
		(
		select count(1) from
			biz_custom_center_consultant bcc,
			sys_user su
		WHERE
			bcc.status=1
		and su.id=bcc.consultant_id
		and su.status=1
		and su.id=#{con.id}
		and bcc.cust_id = ANY (
		SELECT
		s1.id
		FROM
		sys_office AS s1,
		sys_user AS u1
		WHERE
		s1.id = u1.company_id
		AND NOT EXISTS (
		SELECT
		1
		FROM
		sys_test_account ta
		WHERE
		bcc.cust_id = ta.object_id
		AND ta.object_name = 'sys_office'
		)
		AND s1.type = 6
		AND s1.STATUS = 1
		AND u1.STATUS = 1
		<!--<if test="ordrHeaderStartTime ==null">-->
			<!--and DATE_FORMAT(s1.create_date,'%Y%m') = DATE_FORMAT(CURDATE(),'%Y%m')-->
		<!--</if>-->
		<!--<if test="ordrHeaderStartTime!=null and orderHeaderEedTime==null">-->
			<!--AND s1.create_date &lt;= #{ordrHeaderStartTime}-->
		<!--</if>-->
		<!--<if test="ordrHeaderStartTime !=null and orderHeaderEedTime!=null">-->
			<!--AND s1.create_date BETWEEN #{ordrHeaderStartTime} and #{orderHeaderEedTime}-->
		<!--</if>-->
		)
		<if test="ordrHeaderStartTime ==null">
			and DATE_FORMAT(bcc.update_time,'%Y%m') = DATE_FORMAT(CURDATE(),'%Y%m')
		</if>
		<if test="ordrHeaderStartTime!=null and orderHeaderEedTime==null">
			AND bcc.update_time &lt;= #{ordrHeaderStartTime}
		</if>
		<if test="ordrHeaderStartTime !=null and orderHeaderEedTime!=null">
			AND bcc.update_time BETWEEN #{ordrHeaderStartTime} and #{orderHeaderEedTime}
		</if>
		) as "officeCount"
		FROM biz_order_header AS oh
		LEFT JOIN biz_custom_center_consultant bcc on bcc.cust_id=oh.cust_id and bcc.status=1
		WHERE
		oh.status=1
		and bcc.consultant_id=#{con.id}
		AND oh.order_type != 4
		<if test="ordrHeaderStartTime ==null">
			and DATE_FORMAT(oh.create_time,'%Y%m') = DATE_FORMAT(CURDATE(),'%Y%m')
		</if>
		<if test="ordrHeaderStartTime!=null and orderHeaderEedTime==null">
			AND oh.create_time &lt;= #{ordrHeaderStartTime}
		</if>
		<if test="ordrHeaderStartTime !=null and orderHeaderEedTime!=null">
			AND oh.create_time BETWEEN #{ordrHeaderStartTime} and #{orderHeaderEedTime}
		</if>
		AND NOT EXISTS (
		SELECT
		1
		FROM
		sys_test_account ta
		WHERE
		oh.cust_id = ta.object_id
		AND ta.object_name = 'sys_office'
		)
		AND (
		(
		oh.biz_status != ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@UNAPPROVE.state}
		AND oh.biz_status != ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@CANCLE.state}
		AND oh.biz_status != ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@UNPAY.state}
		)
		OR (oh.biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND
		oh.receive_total > 0)
		)
	</select>

	<!-- 品类主管 管理 统计商品  -->
	<select id="categorySkuStatistics" resultType="BizOrderHeader" parameterType="User">
		SELECT
		(select count(1) from biz_order_header aa
		LEFT JOIN biz_order_detail bb on bb.order_id=aa.id
		LEFT JOIN biz_sku_info cc on cc.id=bb.sku_id
		LEFT JOIN biz_product_info dd on dd.id=cc.prod_id
		left join biz_variety_info ff on ff.id= dd.vari_id
		LEFT JOIN biz_variety_user_info gg on gg.variety_id=ff.id
		LEFT JOIN sys_user hh on hh.id=gg.user_id
		WHERE
		aa.status=1
		and bb.status=1
		and cc.status=1
		and dd.status=1
		and hh.status=1
		AND NOT EXISTS (
		SELECT
		1
		FROM
		sys_test_account ta
		WHERE
		aa.cust_id = ta.object_id
		AND ta.object_name = 'sys_office'
		)
		and aa.order_type !=4
		<if test="ordrHeaderStartTime ==null">
			and DATE_FORMAT(aa.create_time,'%Y%m') = DATE_FORMAT(CURDATE(),'%Y%m')
		</if>
		<if test="ordrHeaderStartTime!=null and orderHeaderEedTime==null">
			AND aa.create_time &lt;= #{ordrHeaderStartTime}
		</if>
		<if test="ordrHeaderStartTime !=null and orderHeaderEedTime!=null">
			AND aa.create_time BETWEEN #{ordrHeaderStartTime} and #{orderHeaderEedTime}
		</if>
		AND (
		(
		a.biz_status != ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@UNAPPROVE.state}
		AND a.biz_status != ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@CANCLE.state}
		AND a.biz_status != ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@UNPAY.state}
		)
		OR (a.biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND
		a.receive_total > 0)
		)
		and hh.id=#{id}
		) as "skuCount",
		count(a.id) as "orderCount",
		sum(a.receive_total) as "receiveTotal",
		(select count(1)
		from
		biz_sku_info qq
		LEFT JOIN biz_product_info bpi on bpi.id=qq.prod_id
		left join biz_variety_info bvi on bvi.id= bpi.vari_id
		LEFT JOIN biz_variety_user_info bvui on bvui.variety_id=bvi.id
		LEFT JOIN sys_user su on su.id=bvui.user_id
		WHERE
		qq.status=1
		and bpi.status=1
		and bvi.status=1
		and su.status=1
		and su.id=#{id}
		<if test="ordrHeaderStartTime ==null">
			and DATE_FORMAT(qq.create_time,'%Y%m') = DATE_FORMAT(CURDATE(),'%Y%m')
		</if>
		<if test="ordrHeaderStartTime!=null and orderHeaderEedTime==null">
			AND qq.create_time &lt;= #{ordrHeaderStartTime}
		</if>
		<if test="ordrHeaderStartTime !=null and orderHeaderEedTime!=null">
			AND qq.create_time BETWEEN #{ordrHeaderStartTime} and #{orderHeaderEedTime}
		</if>
		) as "opShelfCount",
		(
		SELECT
		count(1)
		FROM
		biz_chat_record AS bizcr
		LEFT JOIN sys_office so ON so.id = bizcr.office_id
		LEFT JOIN sys_user su ON su.id = bizcr.user_id
		WHERE
		bizcr. STATUS = 1
		and so.status=1
		and su.status=1
		and su.id=#{id}
		and bizcr.create_id=#{id}
		and so.type=6
		<if test="ordrHeaderStartTime ==null">
			and DATE_FORMAT(bizcr.create_time,'%Y%m') = DATE_FORMAT(CURDATE(),'%Y%m')
		</if>
		<if test="ordrHeaderStartTime!=null and orderHeaderEedTime==null">
			AND bizcr.create_time &lt;= #{ordrHeaderStartTime}
		</if>
		<if test="ordrHeaderStartTime !=null and orderHeaderEedTime!=null">
			AND bizcr.create_time BETWEEN #{ordrHeaderStartTime} and #{orderHeaderEedTime}
		</if>
		<if test="sqlMap != null and sqlMap.chat != null and sqlMap.chat != ''">
			${sqlMap.chat}
		</if>
		) as "officeChatRecord"
		from
		biz_order_header a
		LEFT JOIN biz_order_detail bod on bod.order_id=a.id and bod.status=1
		LEFT JOIN biz_sku_info bsi on bsi.id=bod.sku_id
		LEFT JOIN biz_product_info bpi on bpi.id=bsi.prod_id
		LEFT JOIN sys_office so on so.id=bpi.vendor_id
		left join biz_variety_info bvi on bvi.id= bpi.vari_id
		LEFT JOIN biz_variety_user_info bvui on bvui.variety_id=bvi.id
		LEFT JOIN sys_user su on su.id=bvui.user_id
		WHERE
		a.status=1
		and su.id=#{id}
		and su.status=1
		AND a.order_type != 4
		<if test="ordrHeaderStartTime ==null">
			and DATE_FORMAT(a.create_time,'%Y%m') = DATE_FORMAT(CURDATE(),'%Y%m')
		</if>
		<if test="ordrHeaderStartTime!=null and orderHeaderEedTime==null">
			AND a.create_time &lt;= #{ordrHeaderStartTime}
		</if>
		<if test="ordrHeaderStartTime !=null and orderHeaderEedTime!=null">
			AND a.create_time BETWEEN #{ordrHeaderStartTime} and #{orderHeaderEedTime}
		</if>
		AND NOT EXISTS (
		SELECT
		1
		FROM
		sys_test_account ta
		WHERE
		a.cust_id = ta.object_id
		AND ta.object_name = 'sys_office'
		)
		AND (
		(
		a.biz_status != ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@UNAPPROVE.state}
		AND a.biz_status != ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@CANCLE.state}
		AND a.biz_status != ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@UNPAY.state}
		)
		OR (a.biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND
		a.receive_total > 0)
		)
	</select>

	<!-- 通过订单获取退款记录entity -->
	<select id="findDrawBack" resultType="com.wanhutong.backend.modules.biz.entity.order.BizDrawBack" parameterType="BizOrderHeader">
		SELECT
		a.id AS "id",
		a.order_id AS "orderDetail.orderHeader.id",
		a.biz_status AS "bizStatus",
		a.status AS "delFlag",
		a.create_id AS "createBy.id",
		a.create_time AS "createDate",
		a.u_version AS "uVersion",
		a.update_id AS "updateBy.id",
		a.update_time AS "updateDate",
		a.order_type AS "orderType",
		a.status_type AS "statusType",
		a.code AS "code",
		a.drawback_status AS "drawbackStatus",
		a.drawback_money AS "drawbackMoney",
		a.apply_time AS "applyTime",
		a.reasons AS "reasons"
		FROM
		biz_drawback a,
		biz_order_header bo
		where
		bo.id=a.order_id
		and bo.order_num=#{orderNum}
	</select>

	<select id="findOrderForVendReq" resultType="BizOrderHeader">
		SELECT
		a.order_num AS "orderNum",
		a.create_time AS "createDate",
		(SELECT sum(bod.unit_price)
		FROM biz_order_header boh
		LEFT JOIN biz_order_detail bod ON bod.order_id = boh.id
		WHERE bod.sku_id = ops.sku_id
		AND boh.id = a.id) AS "detailPrice",
		a.total_detail AS "totalDetail"
		FROM biz_order_header a
		LEFT JOIN biz_order_detail od ON od.order_id = a.id
		LEFT JOIN biz_op_shelf_sku ops ON ops.id = od.sku_shelf_id
		WHERE
			1 = 1
		<if test="skuIdList != null">
			AND ops.sku_id IN
			<foreach collection="skuIdList" index="index" item="skuId" open="(" separator="," close=")">
				 #{skuId}
			</foreach>
			  AND ops.center_id = #{centId}
        </if>
	</select>

	<update id="updateBizStatus">
		UPDATE biz_order_header SET
		biz_status = #{status},
		update_id = #{updateBy.id},
		update_time = #{updateDate}
		WHERE id = #{id}
	</update>

	<update id="updateProcessId">
		UPDATE biz_order_header SET
		process_id  = #{processId}
		WHERE id = #{headerId}
	</update>

</mapper>
