<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wanhutong.backend.modules.biz.dao.order.BizOrderHeaderDao">

	<resultMap id="orderHeaderResult" type="BizOrderHeader">
		<id property="id" column="id"/>
		<result property="orderNum" column="orderNum"/>
		<result property="orderType" column="orderType"/>
		<result property="totalDetail" column="totalDetail"/>
		<result property="receiveTotal" column="receiveTotal"/>
		<result property="totalExp" column="totalExp"/>

		<result property="freight" column="freight"/>
		<result property="invStatus" column="invStatus"/>
		<result property="bizStatus" column="bizStatus"/>
		<result property="bizType" column="bizType"/>
		<result property="itemNo" column="itemNo"/>
		<result property="delFlag" column="delFlag"/>
		<result property="centersName" column="centersName"/>

		<result property="createDate" column="createDate"/>
		<result property="updateDate" column="updateDate"/>

		<association property="customer" javaType="Office" column="customer.id">
			<id property="id" column="customer.id"/>
			<result property="name" column="customer.name"/>
			<result property="phone" column="customer.phone"/>
		</association>

		<association property="bizLocation" javaType="BizOrderAddress" column="bizLocation.id">
			<id property="id" column="bizLocation.id"/>
			<result property="receiver" column="bizLocation.receiver"/>
			<result property="phone" column="bizLocation.phone"/>
			<result property="address" column="bizLocation.address"/>
			<association property="province" javaType="SysRegion" column="province.id">
				<id property="id" column="province.id"/>
				<result property="name" column="province.name"/>
			</association>
			<association property="city" javaType="SysRegion" column="city.id">
				<id property="id" column="city.id"/>
				<result property="name" column="city.name"/>
			</association>
			<association property="region" javaType="SysRegion" column="region.id">
				<id property="id" column="region.id"/>
				<result property="name" column="region.name"/>
			</association>
		</association>

		<association property="platformInfo" javaType="BizPlatformInfo" column="platformInfo.id">
			<id property="id" column="platformInfo.id"/>
			<result property="name" column="platformInfo.name"/>
		</association>

		<association property="createBy" javaType="User" column="createBy.id">
			<id property="id" column="createBy.id"/>
			<id property="name" column="createBy.name"/>
		</association>
		<association property="updateBy" javaType="User" column="updateBy.id">
			<id property="id" column="updateBy.id"/>
			<id property="name" column="updateBy.name"/>
		</association>

		<collection property="orderDetailList" ofType="BizOrderDetail">
			<id property="id" column="orderDetailList.id" />
			<result property="ordQty" column="orderDetailList.ordQty" />
			<result property="sentQty" column="orderDetailList.sentQty" />
			<result property="lineNo" column="orderDetailList.lineNo" />
			<association property="skuInfo" javaType="BizSkuInfo" column="skuInfo.id">
				<id property="id" column="orderDetailList.skuInfo.id"/>
				<result property="name" column="orderDetailList.skuInfo.name"/>
				<result property="partNo" column="orderDetailList.skuInfo.partNo"/>
				<result property="buyPrice" column="orderDetailList.skuInfo.buyPrice" />
				<result property="itemNo" column="orderDetailList.skuInfo.itemNo"/>
			</association>
		</collection>


	</resultMap>


	<sql id="bizOrderHeaderColumns">
		a.id AS "id",
		a.order_num AS "orderNum",
		a.order_type AS "orderType",
		a.cust_id AS "customer.id",
		so.name as "customer.name",
		so.phone AS "customer.phone",
		c.receiver as "bizLocation.receiver",
		c.phone as "bizLocation.phone",
		c.province_id as "bizLocation.province.id",
		province.name as "bizLocation.province.name",
		c.city_id as "bizLocation.city.id",
		city.name as "bizLocation.city.name",
		c.region_id as "bizLocation.region.id",
		reg.name as "bizLocation.region.name",
		c.address as "bizLocation.address",
		a.total_detail AS "totalDetail",
		a.receive_total as "receiveTotal",
		a.total_exp AS "totalExp",
		a.freight AS "freight",
		a.inv_status AS "invStatus",
		a.biz_status AS "bizStatus",
		a.biz_type as "bizType",
		a.plateform_id AS "platformInfo.id",
		bpi.name as "platformInfo.name",
		a.ship_to_addr AS "bizLocation.id",
		a.status AS "delFlag",
		a.create_id AS "createBy.id",
		su.name as "createBy.name",
		a.create_time AS "createDate",
		a.u_version AS "uVersion",
		a.update_id AS "updateBy.id",
		su.name as "updateBy.name",
		a.update_time AS "updateDate",
		s.name as "centersName",
		con.id AS "con.id",
		con.name AS "con.name"
	</sql>

	<sql id="bizOrderHeaderJoins">
		left join sys_office as so on a.cust_id=so.id
		LEFT JOIN biz_order_address c ON c.id = a.ship_to_addr
        LEFT JOIN sys_region province ON c.province_id = province.id
        LEFT JOIN sys_region city ON c.city_id = city.id
        LEFT JOIN sys_region reg ON c.region_id = reg.id
		left join sys_user su on a.create_id=su.id
		left join biz_cms_platform_info bpi on a.plateform_id=bpi.id
    	LEFT JOIN biz_custom_center_consultant ccs ON ccs.cust_id=a.cust_id
		LEFT JOIN sys_office s on s.id=ccs.center_id
		LEFT JOIN sys_user con ON con.id = ccs.consultant_id
	</sql>

	<select id="get" resultType="BizOrderHeader">
		SELECT
		<include refid="bizOrderHeaderColumns"/>
		FROM biz_order_header a
		<include refid="bizOrderHeaderJoins"/>
		WHERE a.id = #{id}
	</select>

	<!--<select id="findList" resultType="BizOrderHeader">-->
	<!--SELECT-->
	<!--<include refid="bizOrderHeaderColumns"/>-->
	<!--from biz_order_header a-->
	<!--<include refid="bizOrderHeaderJoins"/>-->
	<!--<where>-->
	<!--a.status = #{DEL_FLAG_NORMAL}-->
	<!--<if test="orderNum != null and orderNum != ''">-->
	<!--AND a.order_num-->
	<!--LIKE-->
	<!--<if test="dbName == 'oracle'">'%'||#{orderNum}||'%'</if>-->
	<!--<if test="dbName == 'mssql'">'%'+#{orderNum}+'%'</if>-->
	<!--<if test="dbName == 'mysql'">concat('%',#{orderNum},'%')</if>-->
	<!--</if>-->
	<!--<if test="orderType != null and orderType != ''">-->
	<!--AND a.order_type = #{orderType}-->
	<!--</if>-->
	<!--<if test="customer != null and customer.id != null and customer.id!=''">-->
	<!--AND a.cust_id = #{customer.id}-->
	<!--</if>-->
	<!--<if test="customer != null and customer.phone != null and customer.phone!=''">-->
	<!--AND su.mobile LIKE-->
	<!--<if test="dbName == 'oracle'">'%'||#{customer.phone}||'%'</if>-->
	<!--<if test="dbName == 'mssql'">'%'+#{customer.phone}+'%'</if>-->
	<!--<if test="dbName == 'mysql'">concat('%',#{customer.phone},'%')</if>-->
	<!--</if>-->
	<!--<if test="receiveTotal != null and receiveTotal != ''">-->
	<!--AND a.receive_total = #{receiveTotal}-->
	<!--</if>-->
	<!--<if test="bizStatus !=null">-->
	<!--AND a.biz_status=#{bizStatus}-->
	<!--</if>-->
	<!--<if test="bizType !=null and bizType!=''">-->
	<!--AND a.biz_type=#{bizType}-->
	<!--</if>-->
	<!--<if test="bizStatusStart !=null and bizStatusEnd !=null">-->
	<!--AND a.biz_status BETWEEN #{bizStatusStart} and #{bizStatusEnd}-->
	<!--</if>-->
	<!--<if test="invStatus !=null and invStatus!=''">-->
	<!--AND a.inv_status=#{invStatus}-->
	<!--</if>-->
	<!--<if test="consultantId!=null">-->
	<!--and ccs.consultant_id = #{consultantId}-->
	<!--</if>-->

	<!--<if test="centerId!=null">-->
	<!--and ccs.center_id = #{centerId}-->
	<!--</if>-->


	<!--<if test="sqlMap != null and sqlMap.order != null and sqlMap.order != ''">-->
	<!--${sqlMap.order}-->
	<!--</if>-->
	<!--</where>-->
	<!--<choose>-->
	<!--<when test="page !=null and page.orderBy != null and page.orderBy != ''">-->
	<!--ORDER BY ${page.orderBy}-->
	<!--</when>-->
	<!--<otherwise>-->
	<!--</otherwise>-->
	<!--</choose>-->
	<!--ORDER BY updateDate DESC-->
	<!--</select>-->


	<select id="findList" resultMap="orderHeaderResult">
		SELECT
		<include refid="bizOrderHeaderColumns"/>,
		od.id AS "orderDetailList.id",
		od.unit_price AS "orderDetailList.unitPrice",
		od.ord_qty AS "orderDetailList.ordQty",
		od.sent_qty AS "orderDetailList.sentQty",
		od.line_no AS "orderDetailList.lineNo",
		si.id AS "orderDetailList.skuInfo.id",
		si.buy_price AS "orderDetailList.skuInfo.buyPrice",
		si.item_no AS "orderDetailList.skuInfo.itemNo"
		FROM biz_order_header a
		LEFT JOIN biz_order_detail od ON od.order_id = a.id
		LEFT JOIN biz_sku_info si ON si.id=od.sku_id
		<include refid="bizOrderHeaderJoins"/>
		<where> 1=1
			<if test="dataStatus!=null and dataStatus!=''">
				and a.status = #{DEL_FLAG_NORMAL}
			</if>

			<if test="orderNum != null and orderNum != ''">
				AND a.order_num
				LIKE
				<if test="dbName == 'oracle'">'%'||#{orderNum}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{orderNum}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{orderNum},'%')</if>
			</if>
			<if test="orderType != null and orderType != ''">
				AND a.order_type = #{orderType}
			</if>
			<if test="customer != null and customer.id != null and customer.id!=''">
				AND a.cust_id = #{customer.id}
			</if>
			<if test="centersName != null and centersName!=''">
				AND s.name like
				<if test="dbName == 'oracle'">'%'||#{centersName}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{centersName}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{centersName},'%')</if>
			</if>
			<if test="customer != null and customer.phone != null and customer.phone!=''">
				AND su.mobile LIKE
				<if test="dbName == 'oracle'">'%'||#{customer.phone}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{customer.phone}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{customer.phone},'%')</if>
			</if>
			<if test="receiveTotal != null and receiveTotal != ''">
				AND a.receive_total = #{receiveTotal}
			</if>
			<if test="bizStatus !=null">
				AND a.biz_status=#{bizStatus}
			</if>
			<if test="ordrHeaderStartTime !=null and ordrHeaderStartTime !='' and orderHeaderEedTime!=null and orderHeaderEedTime!=''">
				AND a.create_time BETWEEN #{ordrHeaderStartTime} and #{orderHeaderEedTime}
			</if>
			<if test="bizType !=null and bizType!=''">
				AND a.biz_type=#{bizType}
			</if>
			<if test="bizStatusStart !=null and bizStatusEnd !=null">
				AND a.biz_status BETWEEN #{bizStatusStart} and #{bizStatusEnd}
			</if>
			<if test="invStatus !=null and invStatus!=''">
				AND a.inv_status=#{invStatus}
			</if>
			<if test="suplyIds!=null">
				and od.suply_id !=0
			</if>

			<if test="consultantId!=null">
				and ccs.consultant_id = #{consultantId}
			</if>

			<if test="centerId!=null">
				and ccs.center_id = #{centerId}
			</if>

			<if test="itemNo !=null and itemNo !=''">
				and si.item_no
				LIKE
				<if test="dbName == 'oracle'">'%'||#{itemNo}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{itemNo}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{itemNo},'%')</if>
			</if>

			<if test="partNo !=null and partNo !=''">
				and si.part_no
				LIKE
				<if test="dbName == 'oracle'">'%'||#{partNo}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{partNo}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{partNo},'%')</if>
			</if>
			<if test="con !=null and con.name != null and con.name !=''">
				and con.name
				LIKE
				<if test="dbName == 'oracle'">'%'||#{con.name}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{con.name}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{con.name},'%')</if>
			</if>

			<if test="sqlMap != null and sqlMap.order != null and sqlMap.order != ''">
				${sqlMap.order}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				GROUP  BY a.id
			</otherwise>
		</choose>
		ORDER BY updateDate DESC
	</select>

	<select id="findCount" resultType="Integer">
		SELECT count(1) from
		(SELECT
		<include refid="bizOrderHeaderColumns"/>,
		od.id AS "orderDetailList.id",
		od.unit_price AS "orderDetailList.unitPrice",
		od.ord_qty AS "orderDetailList.ordQty",
		od.sent_qty AS "orderDetailList.sentQty",
		si.id AS "orderDetailList.skuInfo.id",
		si.buy_price AS "orderDetailList.skuInfo.buyPrice",
		si.item_no AS "orderDetailList.skuInfo.itemNo"
		FROM biz_order_header a
		LEFT JOIN biz_order_detail od ON od.order_id = a.id
		LEFT JOIN biz_sku_info si ON si.id=od.sku_id
		<include refid="bizOrderHeaderJoins"/>
		<where>
			a.status = #{DEL_FLAG_NORMAL}
			<if test="orderNum != null and orderNum != ''">
				AND a.order_num
				LIKE
				<if test="dbName == 'oracle'">'%'||#{orderNum}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{orderNum}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{orderNum},'%')</if>
			</if>
			<if test="centersName != null and centersName!=''">
				AND s.name like
				<if test="dbName == 'oracle'">'%'||#{centersName}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{centersName}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{centersName},'%')</if>
			</if>
			<if test="orderType != null and orderType != ''">
				AND a.order_type = #{orderType}
			</if>
			<if test="customer != null and customer.id != null and customer.id!=''">
				AND a.cust_id = #{customer.id}
			</if>
			<if test="customer != null and customer.phone != null and customer.phone!=''">
				AND su.mobile LIKE
				<if test="dbName == 'oracle'">'%'||#{customer.phone}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{customer.phone}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{customer.phone},'%')</if>
			</if>
			<if test="receiveTotal != null and receiveTotal != ''">
				AND a.receive_total = #{receiveTotal}
			</if>
			<if test="bizStatus !=null">
				AND a.biz_status=#{bizStatus}
			</if>
			<if test="bizType !=null and bizType!=''">
				AND a.biz_type=#{bizType}
			</if>
			<if test="bizStatusStart !=null and bizStatusEnd !=null">
				AND a.biz_status BETWEEN #{bizStatusStart} and #{bizStatusEnd}
			</if>
			<if test="invStatus !=null and invStatus!=''">
				AND a.inv_status=#{invStatus}
			</if>
			<if test="consultantId!=null">
				and ccs.consultant_id = #{consultantId}
			</if>

			<if test="centerId!=null">
				and ccs.center_id = #{centerId}
			</if>

			<if test="itemNo !=null and itemNo !=''">
				and si.item_no
				LIKE
				<if test="dbName == 'oracle'">'%'||#{itemNo}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{itemNo}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{itemNo},'%')</if>
			</if>

			<if test="partNo !=null and partNo !=''">
				and si.part_no
				LIKE
				<if test="dbName == 'oracle'">'%'||#{partNo}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{partNo}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{partNo},'%')</if>
			</if>

			<if test="con !=null and con.name != null and con.name !=''">
				and con.name
				LIKE
				<if test="dbName == 'oracle'">'%'||#{con.name}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{con.name}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{con.name},'%')</if>
			</if>

			<if test="sqlMap != null and sqlMap.order != null and sqlMap.order != ''">
				${sqlMap.order}
			</if>
		</where>



		GROUP  BY a.id
		) tmp_count




	</select>

	<select id="findAllList" resultType="BizOrderHeader">
		SELECT
		<include refid="bizOrderHeaderColumns"/>
		FROM biz_order_header a
		<include refid="bizOrderHeaderJoins"/>
		<where>
			a.status = #{DEL_FLAG_NORMAL}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
		ORDER BY updateDate DESC
	</select>

	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO biz_order_header(
		id,
		order_num,
		order_type,
		cust_id,
		total_detail,
		<if test="receiveTotal !=null and receiveTotal !=''">
			receive_total,
		</if>
		total_exp,
		freight,
		<if test="invStatus !=null and invStatus !=''">
			inv_status,
		</if>
		<if test="bizStatus !=null and bizStatus !=''">
			biz_status,
		</if>
		biz_type,
		plateform_id,
		ship_to_addr,
		status,
		create_id,
		create_time,
		u_version,
		update_id,
		update_time
		) VALUES (
		#{id},
		#{orderNum},
		#{orderType},
		#{customer.id},
		#{totalDetail},
		<if test="receiveTotal !=null and receiveTotal !=''">
			#{receiveTotal},
		</if>
		#{totalExp},
		#{freight},
		<if test="invStatus !=null and invStatus !=''">
			#{invStatus},
		</if>
		<if test="bizStatus !=null and bizStatus !=''">
			#{bizStatus},
		</if>
		#{bizType},
		#{platformInfo.id},
		#{bizLocation.id},
		#{delFlag},
		#{createBy.id},
		#{createDate},
		#{uVersion},
		#{updateBy.id},
		#{updateDate}
		)
	</insert>

	<update id="update">
		UPDATE biz_order_header SET
		order_num = #{orderNum},
		order_type = #{orderType},
		cust_id = #{customer.id},
		total_detail = #{totalDetail},
		<if test="receiveTotal !=null and receiveTotal !=''">
			receive_total = #{receiveTotal},
		</if>
		total_exp = #{totalExp},
		freight = #{freight},
		inv_status = #{invStatus},
		biz_status = #{bizStatus},
		biz_type = #{bizType},
		plateform_id = #{platformInfo.id},
		ship_to_addr = #{bizLocation.id},
		u_version = #{uVersion},
		update_id = #{updateBy.id},
		update_time = #{updateDate}
		WHERE id = #{id}
	</update>

	<update id="delete">
		UPDATE biz_order_header SET 
			status = #{delFlag}
		WHERE id = #{id}
	</update>

	<select id="findListFirstOrder" resultType="BizOrderHeader">
		SELECT
		<include refid="bizOrderHeaderColumns"/>
		FROM biz_order_header a
		<include refid="bizOrderHeaderJoins"/>
		<where>
			a.status = #{DEL_FLAG_NORMAL}
			<if test="customer !=null and customer.id!=null and customer.id!=''">
				AND a.cust_id=#{customer.id}
			</if>
			<if test="bizStatus !=null">
				AND a.biz_status !=#{bizStatus}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>

	<update id="updateMoney">
		UPDATE biz_order_header SET
		total_detail = #{totalDetail}
		<if test="totalExp !=null and totalExp !=''">
			,total_exp = #{totalExp}
		</if>
		<if test="freight !=null and freight !=''">
			,freight = #{freight}
		</if>
		WHERE id = #{id}
	</update>

	<!--================================================================-->
	<!--计算成本-->
	<select id="getValidOrderTotalAndCountByCreateTimeMonth" resultType="com.wanhutong.backend.modules.biz.entity.dto.BizOrderStatisticsDto">
		SELECT
		sum(total_detail + total_exp + freight) AS totalMoney,
		count(1) AS orderCount,
		office.id AS officeId,
		office.name AS officeName,
		(SELECT
		sum(sku1.buy_price * detail1.ord_qty)
		FROM
		biz_order_header AS header1
		LEFT JOIN biz_custom_center_consultant AS consultant1 ON consultant1.cust_id = header1.cust_id
		LEFT JOIN sys_office AS office1 ON consultant1.center_id = office1.id
		LEFT JOIN biz_order_detail AS detail1 ON detail1.order_id = header1.id
		LEFT JOIN biz_sku_info AS sku1 ON sku1.id = detail1.sku_id
		WHERE office.id = office1.id AND header1.order_type = 1
		AND (<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
		biz_status != #{item.state}
	</foreach>
		OR (biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
		AND
		header1.create_time LIKE #{month}
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where header1.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		GROUP BY office.id)                     AS buyPrice
		FROM biz_order_header AS header
		LEFT JOIN biz_custom_center_consultant AS consultant ON consultant.cust_id = header.cust_id
		LEFT JOIN sys_office AS office ON consultant.center_id = office.id
		WHERE
		header.order_type = 1
		AND not exists(
		select 1
		from sys_test_account ta
		where header.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		AND
		(<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
		biz_status != #{item.state}
	</foreach>
		OR (biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
		AND header.create_time LIKE #{month}
		AND office.type = #{officeType}
		GROUP BY office.id
	</select>

	<select id="getProductStatisticData" resultType="com.wanhutong.backend.modules.biz.entity.dto.BizProductStatisticsDto">
		SELECT DISTINCT
		sum(oh.total_detail + oh.total_exp + oh.freight) AS totalMoney,
		sum(receive_total) AS receiveTotal,
		od.sku_id AS skuId, pi.name, pi.item_no AS itemNo, pi.vendor_name AS vendorName, ss.sale_price AS salePrice, count(1) as count, (SELECT count(1) FROM biz_prod_view_log AS pvLog WHERE pvLog.prod_id = si.prod_id) AS clickCount
		from biz_order_header oh, biz_order_detail od,biz_sku_info si,biz_product_info pi,biz_op_shelf_sku ss, biz_custom_center_consultant ccc
		WHERE oh.id = od.order_id
		and oh.order_type = 1
		and si.id = od.sku_id
		and si.prod_id = pi.id
		<if test="variId != null and variId != 0">
			and pi.vari_id = #{variId}
		</if>
		and ccc.cust_id = oh.cust_id
		and oh.`status` = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL}
		and si.`status` = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL}
		and pi.`status` = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL}
		and ss.`status` = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL}
		and ss.sku_id = si.id
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where oh.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		AND date_format(oh.create_time, '%Y-%m') = #{month}
		<if test="purchasingId != null and purchasingId != 0">
			AND ccc.center_id = #{purchasingId}
		</if>
		GROUP BY si.prod_id
		ORDER BY count DESC
		LIMIT 10
	</select>

	<select id="getUserStatisticData" resultType="com.wanhutong.backend.modules.biz.entity.dto.BizUserStatisticsDto">
		SELECT s.name,count(1) as count
		FROM biz_custom_center_consultant c, sys_office s
		WHERE c.cust_id = ANY (
			SELECT s1.id
			from sys_office AS s1, sys_user AS u1
			where s1.id = u1.company_id
			AND s1.type = 6
			AND date_format(s1.create_date, '%Y-%m') = #{month}
			AND s1.status = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL}
			AND u1.status = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL})
		AND c.status = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL}
		AND s.status = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL} and s.id = c.center_id
		and s.TYPE =8
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where c.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		GROUP BY center_id
	</select>

	<select id="getUserSaleStatisticData" resultType="com.wanhutong.backend.modules.biz.entity.dto.BizUserSaleStatisticsDto">
		SELECT
		sum(oh.total_detail + oh.total_exp + oh.freight) AS totalMoney,
		sum(receive_total) AS receiveTotal,
		count(1) AS orderCount,
		us.name AS name,
		us.id AS usId,
		(SELECT sum(sku1.buy_price * detail1.ord_qty)
		FROM biz_order_header AS header1
		LEFT JOIN biz_custom_center_consultant AS consultant1 ON consultant1.cust_id = header1.cust_id
		LEFT JOIN biz_order_detail AS detail1 ON detail1.order_id = header1.id
		LEFT JOIN biz_sku_info AS sku1 ON sku1.id = detail1.sku_id
		LEFT JOIN sys_user us1 ON consultant1.consultant_id = us1.id
		WHERE us.id = us1.id AND header1.order_type = 1
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where header1.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		AND header1.status = 1
		AND sku1.status = 1
		AND us1.status = 1
		AND consultant1.status = 1
		AND
		(<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
		header1.biz_status != #{item.state}
		</foreach>
		OR (header1.biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
		<if test="month != null and month != ''">
		AND header1.create_time LIKE #{month}
		</if>
		GROUP BY us1.name)   AS buyPrice,
		CASE date_format(oh.create_time, '%Y-%m')
		WHEN '2017-06'
		THEN '2017-09'
		WHEN '2017-07'
		THEN '2017-10'
		WHEN '2017-08'
		THEN '2017-09'
		ELSE date_format(oh.create_time, '%Y-%m')
		END   createTime
		FROM biz_order_header oh
		LEFT JOIN	sys_office off ON off.id = oh.cust_id
		LEFT JOIN biz_custom_center_consultant ccc ON ccc.cust_id = off.id
		LEFT JOIN sys_user us ON us.id = ccc.consultant_id
		WHERE
		oh.order_type = 1
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where oh.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		AND off.name NOT LIKE '%测试%'
		AND us.name NOT LIKE '%测试%'
		and oh.`status` = 1
		AND (<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
		biz_status != #{item.state}
		</foreach>
		OR (biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
		<if test="month != null and month != ''">
			AND oh.create_time LIKE #{month}
		</if>
		<if test="purchasingId != null and purchasingId != 0">
			AND us.office_id = #{purchasingId}
		</if>
		<if test="usId != null and usId != 0">
			AND us.id = #{usId}
		</if>
		GROUP BY us.`name`
	</select>

	<select id="getSingleUserSaleStatisticData" resultType="com.wanhutong.backend.modules.biz.entity.dto.BizUserSaleStatisticsDto">
		SELECT
		sum(oh.total_detail + oh.total_exp + oh.freight) AS totalMoney,
		sum(receive_total) AS receiveTotal,
		<!--start-->
		(SELECT count(1) FROM
		biz_custom_center_consultant cc WHERE cc.consultant_id = us.id
		) AS custCount,
		<!--end-->
		count(1) AS orderCount,
		us.name AS name,
		us.id AS usId,
		(SELECT sum(sku1.buy_price * detail1.ord_qty)
		FROM biz_order_header AS header1
		LEFT JOIN biz_custom_center_consultant AS consultant1 ON consultant1.cust_id = header1.cust_id
		LEFT JOIN biz_order_detail AS detail1 ON detail1.order_id = header1.id
		LEFT JOIN biz_sku_info AS sku1 ON sku1.id = detail1.sku_id
		LEFT JOIN sys_user us1 ON consultant1.consultant_id = us1.id
		WHERE us.id = us1.id AND header1.order_type = 1
		AND header1.status = 1
		AND sku1.status = 1
		AND us1.status = 1
		AND consultant1.status = 1
		AND date_format(header1.create_time, '%Y-%m') = date_format(oh.create_time, '%Y-%m')
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where header1.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		AND
		(<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
		header1.biz_status != #{item.state}
		</foreach>
		OR (header1.biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
		GROUP BY us1.name)   AS buyPrice,
		-- 		date_format(oh.create_time, '%Y-%m') AS createTime
		CASE date_format(oh.create_time, '%Y-%m')
		WHEN '2017-06'
		THEN '2017-09'
		WHEN '2017-07'
		THEN '2017-10'
		WHEN '2017-08'
		THEN '2017-09'
		ELSE date_format(oh.create_time, '%Y-%m')
		END   createTime
		FROM biz_order_header oh
		LEFT JOIN	sys_office off ON off.id = oh.cust_id
		LEFT JOIN biz_custom_center_consultant ccc ON ccc.cust_id = off.id
		LEFT JOIN sys_user us ON us.id = ccc.consultant_id
	    WHERE
		oh.order_type = 1
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where oh.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		AND off.name NOT LIKE '%测试%'
		AND us.name NOT LIKE '%测试%'
		and oh.`status` = 1
		AND (<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
		biz_status != #{item.state}
	</foreach>
		OR (biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
		<if test="purchasingId != null and purchasingId != 0">
			AND us.office_id = #{purchasingId}
		</if>
		<if test="usId != null and usId != 0">
			AND us.id = #{usId}
		</if>
		GROUP BY createTime
	</select>


	<!--================================================================-->
	<select id="getValidOrderTotalAndCountByCreateTimeDay" resultType="com.wanhutong.backend.modules.biz.entity.dto.BizOrderStatisticsDto">
		SELECT
		sum(total_detail + total_exp + freight) AS totalMoney,
		count(1) AS orderCount,
		office.id AS officeId,
		office.name AS officeName,
		(SELECT
		sum(sku1.buy_price * detail1.ord_qty)
		FROM
		biz_order_header AS header1
		LEFT JOIN biz_custom_center_consultant AS consultant1 ON consultant1.cust_id = header1.cust_id
		LEFT JOIN sys_office AS office1 ON consultant1.center_id = office1.id
		LEFT JOIN biz_order_detail AS detail1 ON detail1.order_id = header1.id
		LEFT JOIN biz_sku_info AS sku1 ON sku1.id = detail1.sku_id
		WHERE office.id = office1.id AND header1.order_type = 1
		AND (<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
		biz_status != #{item.state}
		</foreach>
		OR (biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where header1.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		AND
		date_format(header1.create_time, '%Y-%m-%d') = #{day}
		GROUP BY office.id)  AS buyPrice
		FROM biz_order_header AS header
		LEFT JOIN biz_custom_center_consultant AS consultant ON consultant.cust_id = header.cust_id
		LEFT JOIN sys_office AS office ON consultant.center_id = office.id
		WHERE
		header.order_type = 1
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where header.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		and
		(<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
		biz_status != #{item.state}
	</foreach>
		OR (biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
		AND date_format(header.create_time, '%Y-%m-%d') = #{day}
		AND office.type = #{officeType}
		GROUP BY office.id
	</select>

	<select id="getProductStatisticDataDay" resultType="com.wanhutong.backend.modules.biz.entity.dto.BizProductStatisticsDto">
		SELECT DISTINCT
		sum(oh.total_detail + oh.total_exp + oh.freight) AS totalMoney,
		sum(receive_total) AS receiveTotal,
		od.sku_id AS skuId, pi.name, pi.item_no AS itemNo, pi.vendor_name AS vendorName, ss.sale_price AS salePrice, count(1) as count, (SELECT count(1) FROM biz_prod_view_log AS pvLog WHERE pvLog.prod_id = si.prod_id) AS clickCount
		from biz_order_header oh, biz_order_detail od,biz_sku_info si,biz_product_info pi,biz_op_shelf_sku ss, biz_custom_center_consultant ccc
		WHERE oh.id = od.order_id
		and si.id = od.sku_id
		and si.prod_id = pi.id
		<if test="variId != null and variId != 0">
			and pi.vari_id = #{variId}
		</if>
		and oh.order_type = 1
		and ccc.cust_id = oh.cust_id
		and oh.`status` = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL}
		and si.`status` = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL}
		and pi.`status` = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL}
		and ss.`status` = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL}
		and ss.sku_id = si.id
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where oh.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		AND date_format(oh.create_time, '%Y-%m-%d') = #{day}
		<if test="purchasingId != null and purchasingId != 0">
			AND ccc.center_id = #{purchasingId}
		</if>
		GROUP BY si.prod_id
		ORDER BY count DESC
		LIMIT 10
	</select>

	<select id="getUserStatisticDataDay" resultType="com.wanhutong.backend.modules.biz.entity.dto.BizUserStatisticsDto">
		SELECT s.name,count(1) as count
		FROM biz_custom_center_consultant c, sys_office s
		WHERE c.cust_id = ANY (
		SELECT s1.id
		from sys_office AS s1, sys_user AS u1
		where s1.id = u1.company_id
		AND s1.type = 6
		AND date_format(s1.create_date, '%Y-%m-%d') = #{day}
		AND s1.status = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL}
		AND u1.status = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL})
		AND c.status = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL}
		AND s.status = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL} and s.id = c.center_id
		and s.TYPE =8
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where c.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		GROUP BY center_id
	</select>

	<select id="getUserSaleStatisticDataDay" resultType="com.wanhutong.backend.modules.biz.entity.dto.BizUserSaleStatisticsDto">
		SELECT
		sum(oh.total_detail + oh.total_exp + oh.freight) AS totalMoney,
		sum(receive_total) AS receiveTotal,
		count(1) AS orderCount,
		us.name AS name,
		us.id AS usId,
		date_format(oh.create_time, '%Y-%m-%d') AS createTime
		FROM biz_order_header oh
		LEFT JOIN	sys_office off ON off.id = oh.cust_id
		LEFT JOIN biz_custom_center_consultant ccc ON ccc.cust_id = off.id
		LEFT JOIN sys_user us ON us.id = ccc.consultant_id
		WHERE
		oh.order_type = 1
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where oh.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		and	oh.`status` = 1
		AND (<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
		biz_status != #{item.state}
	</foreach>
		OR (biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
		<if test="day != null and day != ''">
			AND date_format(oh.create_time, '%Y-%m-%d') = #{day}
		</if>
		<if test="purchasingId != null and purchasingId != 0">
			AND us.office_id = #{purchasingId}
		</if>
		<if test="usId != null and usId != 0">
			AND us.id = #{usId}
		</if>
		GROUP BY us.`name`
	</select>

	<select id="getSingleUserSaleStatisticDataDay" resultType="com.wanhutong.backend.modules.biz.entity.dto.BizUserSaleStatisticsDto">
		SELECT
		sum(oh.total_detail + oh.total_exp + oh.freight) AS totalMoney,
		sum(receive_total) AS receiveTotal,
		count(1) AS orderCount,
		us.name AS name,
		us.id AS usId,
		date_format(oh.create_time, '%Y-%m-%d') AS createTime
		FROM biz_order_header oh
		LEFT JOIN	sys_office off ON off.id = oh.cust_id
		LEFT JOIN biz_custom_center_consultant ccc ON ccc.cust_id = off.id
		LEFT JOIN sys_user us ON us.id = ccc.consultant_id
		WHERE
		oh.order_type = 1
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where oh.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		and	oh.`status` = 1
		AND (<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
		biz_status != #{item.state}
	</foreach>
		OR (biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
		<if test="day != null and day != ''">
			AND date_format(oh.create_time, '%Y-%m-%d') = #{day}
		</if>
		<if test="purchasingId != null and purchasingId != 0">
			AND us.office_id = #{purchasingId}
		</if>
		<if test="usId != null and usId != 0">
			AND us.id = #{usId}
		</if>
		GROUP BY createTime
	</select>
	<!--================================================================-->
	<!--计算成本-->
	<select id="getValidOrderTotalAndCountByCreateTimeBetween" resultType="com.wanhutong.backend.modules.biz.entity.dto.BizOrderStatisticsDto">
		SELECT
		sum(total_detail + total_exp + freight) AS totalMoney,
		count(1) AS orderCount,
		office.id AS officeId,
		office.name AS officeName,
		(SELECT
		sum(sku1.buy_price * detail1.ord_qty)
		FROM
		biz_order_header AS header1
		LEFT JOIN biz_custom_center_consultant AS consultant1 ON consultant1.cust_id = header1.cust_id
		LEFT JOIN sys_office AS office1 ON consultant1.center_id = office1.id
		LEFT JOIN biz_order_detail AS detail1 ON detail1.order_id = header1.id
		LEFT JOIN biz_sku_info AS sku1 ON sku1.id = detail1.sku_id
		WHERE office.id = office1.id AND header1.order_type = 1
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where header1.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		AND (<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
		biz_status != #{item.state}
		</foreach>
		OR (biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
		AND
		header1.create_time BETWEEN #{startDate} AND #{endDate}
		GROUP BY office.id) AS buyPrice
		FROM biz_order_header AS header
		LEFT JOIN biz_custom_center_consultant AS consultant ON consultant.cust_id = header.cust_id
		LEFT JOIN sys_office AS office ON consultant.center_id = office.id
		WHERE
		header.order_type = 1
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where header.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		and
		(<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
		biz_status != #{item.state}
	</foreach>
		OR (biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
		AND header.create_time BETWEEN #{startDate} AND #{endDate}
		AND office.type = #{officeType}
		GROUP BY office.id
	</select>

	<select id="getProductStatisticDataBetween" resultType="com.wanhutong.backend.modules.biz.entity.dto.BizProductStatisticsDto">
		SELECT DISTINCT
		sum(oh.total_detail + oh.total_exp + oh.freight) AS totalMoney,
		sum(receive_total) AS receiveTotal,
		od.sku_id AS skuId, pi.name, pi.item_no AS itemNo, pi.vendor_name AS vendorName, ss.sale_price AS salePrice, count(1) as count, (SELECT count(1) FROM biz_prod_view_log AS pvLog WHERE pvLog.prod_id = si.prod_id) AS clickCount
		from biz_order_header oh, biz_order_detail od,biz_sku_info si,biz_product_info pi,biz_op_shelf_sku ss, biz_custom_center_consultant ccc
		WHERE oh.id = od.order_id
		and si.id = od.sku_id
		and si.prod_id = pi.id
		<if test="variId != null and variId != 0">
			and pi.vari_id = #{variId}
		</if>
		and oh.order_type = 1
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where oh.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		and ccc.cust_id = oh.cust_id
		and oh.`status` = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL}
		and si.`status` = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL}
		and pi.`status` = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL}
		and ss.`status` = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL}
		and ss.sku_id = si.id
		AND oh.create_time BETWEEN #{startDate} AND #{endDate}
		<if test="purchasingId != null and purchasingId != 0">
			AND ccc.center_id = #{purchasingId}
		</if>
		GROUP BY si.prod_id
		ORDER BY count DESC
		LIMIT 10
	</select>

	<select id="getUserStatisticDataBetween" resultType="com.wanhutong.backend.modules.biz.entity.dto.BizUserStatisticsDto">
		SELECT s.name,count(1) as count
		FROM biz_custom_center_consultant c, sys_office s
		WHERE c.cust_id = ANY (
		SELECT s1.id
		from sys_office AS s1, sys_user AS u1
		where s1.id = u1.company_id
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where c.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		AND s1.type = 6
		AND s1.create_date BETWEEN #{startDate} AND #{endDate}
		AND s1.status = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL}
		AND u1.status = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL})
		AND c.status = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL}
		AND s.status = ${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL} and s.id = c.center_id
		and s.TYPE =8
		GROUP BY center_id
	</select>

	<select id="getUserSaleStatisticDataBetween" resultType="com.wanhutong.backend.modules.biz.entity.dto.BizUserSaleStatisticsDto">
		SELECT
		sum(oh.total_detail + oh.total_exp + oh.freight) AS totalMoney,
		sum(receive_total) AS receiveTotal,
		count(1) AS orderCount,
		us.name AS name,
		us.id AS usId,
		date_format(oh.create_time, '%Y-%m-%d') AS createTime,
		(SELECT sum(sku1.buy_price * detail1.ord_qty)
		FROM biz_order_header AS header1
		LEFT JOIN biz_custom_center_consultant AS consultant1 ON consultant1.cust_id = header1.cust_id
		LEFT JOIN biz_order_detail AS detail1 ON detail1.order_id = header1.id
		LEFT JOIN biz_sku_info AS sku1 ON sku1.id = detail1.sku_id
		LEFT JOIN sys_user us1 ON consultant1.consultant_id = us1.id
		WHERE us.id = us1.id AND header1.order_type = 1
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where header1.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		AND header1.status = 1
		AND sku1.status = 1
		AND us1.status = 1
		AND consultant1.status = 1
		AND
		(<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
		header1.biz_status != #{item.state}
	</foreach>
		OR (header1.biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
		AND header1.create_time BETWEEN #{startDate} AND  #{endDate}
		GROUP BY us1.name)   AS buyPrice
		FROM biz_order_header oh
		LEFT JOIN	sys_office off ON off.id = oh.cust_id
		LEFT JOIN biz_custom_center_consultant ccc ON ccc.cust_id = off.id
		LEFT JOIN sys_user us ON us.id = ccc.consultant_id
		WHERE
		oh.order_type = 1
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where oh.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		and oh.`status` = 1
		AND (<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
		biz_status != #{item.state}
	</foreach>
		OR (biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
		AND oh.create_time BETWEEN #{startDate} AND  #{endDate}
		<if test="purchasingId != null and purchasingId != 0">
			AND us.office_id = #{purchasingId}
		</if>
		<if test="usId != null and usId != 0">
			AND us.id = #{usId}
		</if>
		GROUP BY us.`name`
	</select>

	<select id="getSingleUserSaleStatisticDataBetween" resultType="com.wanhutong.backend.modules.biz.entity.dto.BizUserSaleStatisticsDto">
		SELECT
		sum(oh.total_detail + oh.total_exp + oh.freight) AS totalMoney,
		sum(receive_total) AS receiveTotal,
		count(1) AS orderCount,
		us.name AS name,
		us.id AS usId,
		date_format(oh.create_time, '%Y-%m-%d') AS createTime
		FROM biz_order_header oh
		LEFT JOIN	sys_office off ON off.id = oh.cust_id
		LEFT JOIN biz_custom_center_consultant ccc ON ccc.cust_id = off.id
		LEFT JOIN sys_user us ON us.id = ccc.consultant_id
		WHERE
		oh.order_type = 1
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where oh.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		and oh.`status` = 1
		AND (<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
		biz_status != #{item.state}
	</foreach>
		OR (biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
		AND oh.create_time BETWEEN #{startDate} AND #{endDate}
		<if test="purchasingId != null and purchasingId != 0">
			AND us.office_id = #{purchasingId}
		</if>
		<if test="usId != null and usId != 0">
			AND us.id = #{usId}
		</if>
		GROUP BY createTime
	</select>

	<!--=====================================================================================-->
	<select id="getAllUserStatisticDataPlatform"
			resultType="com.wanhutong.backend.modules.biz.entity.dto.BizUserStatisticsDto">
		SELECT
  		count(1)                                AS count,
  		date_format(so.create_date, '%Y-%m-%d') AS createDate
		FROM
  		sys_office so
		WHERE so.create_date BETWEEN #{startDate} AND #{endDate}
      	AND so.type = 6
      	AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where so.id = ta.object_id
		and ta.object_name = 'sys_office'
		)
      	AND so.`status` = 1
		GROUP BY createDate
	</select>
	<select id="getUserStatisticDataPlatform" resultType="com.wanhutong.backend.modules.biz.entity.dto.BizUserStatisticsDto">
		SELECT count(1) AS count,
		<if test="type == null or type == 0">
			-- 			date_format(so.create_date, '%Y-%m') AS createDate
			CASE date_format(so.create_date, '%Y-%m')
			WHEN '2017-06'
			THEN '2017-09'
			WHEN '2017-07'
			THEN '2017-10'
			WHEN '2017-08'
			THEN '2017-09'
			ELSE date_format(so.create_date, '%Y-%m')
			END   createDate
		</if>
		<if test="type == 1">
			date_format(so.create_date, '%Y-%m-%d') AS createDate
		</if>
		FROM sys_office o, sys_user us, biz_custom_center_consultant cc,sys_office so
		WHERE o.id = us.company_id
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where cc.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		<if test="type == 1">
			AND date_format(so.create_date, '%Y-%m') = #{month}
		</if>
		<if test="centerType == null or centerType == 0">
			and o.type in (8, 10, 11)
		</if>
		<if test="centerType != null and centerType != 0">
			and o.type = #{centerType}
		</if>
		and cc.consultant_id = us.id
		and so.id = cc.cust_id
		and so.`status` = 1
		and o.status = 1
		and us.`status` = 1
		and cc.`status` = 1
		GROUP BY createDate
	</select>

	<select id="getAllValidOrderTotalAndCount" resultType="com.wanhutong.backend.modules.biz.entity.dto.BizOrderStatisticsDto">
		select  count(1) as orderCount,
		SUM(oh.total_detail + oh.total_exp + oh.freight) AS totalMoney,
		sum(receive_total) AS receiveTotal,
		(SELECT sum(sku1.buy_price * detail1.ord_qty)
		FROM biz_order_header AS header1
		LEFT JOIN biz_custom_center_consultant AS consultant1 ON consultant1.cust_id = header1.cust_id
		LEFT JOIN sys_office AS office1 ON consultant1.center_id = office1.id
		LEFT JOIN biz_order_detail AS detail1 ON detail1.order_id = header1.id
		LEFT JOIN biz_sku_info AS sku1 ON sku1.id = detail1.sku_id
		WHERE header1.order_type = 1
		and header1.`status` = 1
		and office1.`status` = 1
		and sku1.`status` = 1
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where header1.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		<if test="centerType == null or centerType == 0">
			and office1.type in (8, 10, 11)
		</if>
		<if test="centerType != null and centerType != 0">
			and office1.type = #{centerType}
		</if>
		AND
		(<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
		oh.biz_status != #{item.state}
		</foreach>
		OR (biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
		AND
		header1.create_time BETWEEN #{startDate} AND #{endDate}
		)   AS buyPrice,

		<if test="type == null or type == 0">
			--             date_format(oh.create_time, '%Y-%m') AS createDate
			CASE date_format(oh.create_time, '%Y-%m')
			WHEN '2017-06'
			THEN '2017-09'
			WHEN '2017-07'
			THEN '2017-10'
			WHEN '2017-08'
			THEN '2017-09'
			ELSE date_format(oh.create_time, '%Y-%m')
			END   createDate
		</if>
		<if test="type == 1">
			date_format(oh.create_time, '%Y-%m-%d') AS createDate
		</if>

		FROM biz_order_header oh
		LEFT JOIN biz_custom_center_consultant AS consultant ON consultant.cust_id = oh.cust_id
		LEFT JOIN sys_office AS office ON consultant.center_id = office.id
		WHERE oh.`status` = 1
		<if test="centerType == null or centerType == 0">
			and office.type in (8, 10, 11)
		</if>
		<if test="centerType != null and centerType != 0">
			and office.type = #{centerType}
		</if>
        AND oh.create_time BETWEEN #{startDate} AND #{endDate}
		and (<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
		oh.biz_status != #{item.state}
		and not exists(
		select 1
		from sys_test_account ta
		where oh.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
	</foreach>
		OR (biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
		GROUP BY createDate
	</select>



	<select id="getValidOrderTotalAndCount" resultType="com.wanhutong.backend.modules.biz.entity.dto.BizOrderStatisticsDto">
		SELECT count(1) as orderCount,
		sum(oh.total_detail + oh.total_exp + oh.freight) AS totalMoney,
		sum(receive_total) AS receiveTotal,
		(SELECT sum(sku1.buy_price * detail1.ord_qty)
		FROM biz_order_header AS header1
		LEFT JOIN biz_custom_center_consultant AS consultant1 ON consultant1.cust_id = header1.cust_id
		LEFT JOIN sys_office AS office1 ON consultant1.center_id = office1.id
		LEFT JOIN biz_order_detail AS detail1 ON detail1.order_id = header1.id
		LEFT JOIN biz_sku_info AS sku1 ON sku1.id = detail1.sku_id
		WHERE header1.order_type = 1
		and header1.`status` = 1
		and office1.`status` = 1
		and sku1.`status` = 1
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where header1.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		<if test="centerType == null or centerType == 0">
			and office1.type in (8, 10, 11)
		</if>
		<if test="centerType != null and centerType != 0">
			and office1.type = #{centerType}
		</if>
		AND
		(<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
		header1.biz_status != #{item.state}
	</foreach>
		OR (biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
		AND
		header1.create_time BETWEEN #{startDate} AND #{endDate}
		<if test="type == 1">
		AND date_format(oh.create_time, '%Y-%m-%d') = date_format(header1.create_time, '%Y-%m-%d')
		</if>
		<if test="type != 1">
		AND date_format(oh.create_time, '%Y-%m') = date_format(header1.create_time, '%Y-%m')
		</if>

		<if test="type == 1">
			GROUP BY date_format(header1.create_time, '%Y-%m-%d')
		</if>
		<if test="type != 1">
			GROUP BY date_format(header1.create_time, '%Y-%m')
		</if>
		)  AS buyPrice,
		<if test="type == null or type == 0">
			CASE date_format(oh.create_time, '%Y-%m')
			WHEN '2017-06'
			THEN '2017-09'
			WHEN '2017-07'
			THEN '2017-10'
			WHEN '2017-08'
			THEN '2017-09'
			ELSE date_format(oh.create_time, '%Y-%m')
			END   createDate
		</if>
		<if test="type == 1">
			date_format(oh.create_time, '%Y-%m-%d') AS createDate
		</if>
		from biz_custom_center_consultant cc, sys_user u, biz_order_header oh, sys_office so
		WHERE cc.consultant_id = u.id
		and oh.cust_id = cc.cust_id
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where oh.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		and so.id = u.company_id
		<if test="centerType == null or centerType == 0">
			and so.type in (8, 10, 11)
		</if>
		<if test="centerType != null and centerType != 0">
			and so.type = #{centerType}
		</if>
		and (<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
		oh.biz_status != #{item.state}
	</foreach>
		OR (biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
		and oh.`status` = 1
		<if test="orderType != null and orderType != 0">
			and oh.`order_type` = #{orderType}
		</if>
		and u.`status` = 1
		and cc.`status` = 1
		<if test="officeId != null and officeId != 0">
			and so.id = #{officeId}
		</if>
		AND oh.create_time BETWEEN #{startDate} AND #{endDate}
		GROUP BY createDate
	</select>

	<select id="getUserTableStatisticData" resultType="com.wanhutong.backend.modules.biz.entity.dto.BizUserSaleStatisticsDto">
		SELECT
		sum(total_detail + total_exp + freight) AS totalMoney,
		count(1) AS orderCount,
		(SELECT count(1) FROM biz_custom_center_consultant cc
		WHERE cc.consultant_id = us.id
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where cc.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		))as custCount,
		us.name AS name,
		cent.name AS centName
		FROM biz_order_header oh
		LEFT JOIN	sys_office off ON off.id = oh.cust_id
		LEFT JOIN biz_custom_center_consultant ccc ON ccc.cust_id = off.id
		LEFT JOIN sys_user us ON us.id = ccc.consultant_id
		LEFT JOIN sys_office cent ON cent.id = us.office_id
		WHERE
		oh.`status` = 1
		AND NOT EXISTS(
		select 1
		from sys_test_account ta
		where oh.cust_id = ta.object_id
		and ta.object_name = 'sys_office'
		)
		AND (<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
		biz_status != #{item.state}
	</foreach>
		OR (biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
		AND date_format(oh.create_time, '%Y-%m') = #{month}
		<if test="purchasingId != null and purchasingId != 0">
			AND us.office_id = #{purchasingId}
		</if>
		GROUP BY us.`name`
	</select>

	<select id="getSkuStatisticDataBetween" resultType="java.lang.Integer">
		SELECT
		count(1) AS upSkuCount
		FROM
		biz_sku_info sku
		LEFT JOIN biz_product_info pi ON sku.prod_id = pi.id
		LEFT JOIN biz_variety_info vi ON vi.id = pi.vari_id
		WHERE
		<if test="variId != null and variId != 0">
			vi.id = #{variId} AND
		</if>
		sku.create_time BETWEEN #{startDate}
		AND #{endDate}
		AND sku.status = 1
	</select>
	<!-- 按月查询全部商品新增数量 -->
	<select id="getSkuAllStatisticData" parameterType="Integer" resultType="com.wanhutong.backend.modules.biz.entity.dto.BizProductStatisticsDto">
		SELECT count(1) AS upSkuCount,
		CASE date_format(bsi.create_time, '%Y-%m')
		WHEN '2017-04'
		THEN '2017-09'
		WHEN '2017-05'
		THEN '2017-10'
		WHEN '2017-06'
		THEN '2017-11'
		when '2017-07'
		then '2017-12'
		when '2017-08'
		then '2018-01'
		ELSE date_format(bsi.create_time, '%Y-%m')
		END monthDate
		FROM biz_sku_info bsi
		LEFT JOIN biz_product_info pi ON bsi.prod_id = pi.id
		LEFT JOIN biz_variety_info vi ON vi.id = pi.vari_id
		WHERE bsi.`status` = 1
		<if test="variId != null and variId != 0">
			AND vi.id = #{variId}
		</if>
		GROUP BY monthDate
	</select>

	<select id="platformDataOverview" resultType="com.wanhutong.backend.modules.biz.entity.dto.BizPlatformDataOverviewDto">
SELECT
  count(1)                                             AS orderCount,
  sum(oh.total_detail + oh.total_exp + oh.freight)     AS accumulatedSalesMonth,
  sum(receive_total)                                   AS receiveTotal,
  (SELECT sum(sku1.buy_price * detail1.ord_qty)
   FROM biz_order_header AS header1 LEFT JOIN biz_custom_center_consultant AS consultant1
       ON consultant1.cust_id = header1.cust_id
     LEFT JOIN sys_office AS office1 ON consultant1.center_id = office1.id
     LEFT JOIN biz_order_detail AS detail1 ON detail1.order_id = header1.id
     LEFT JOIN biz_sku_info AS sku1 ON sku1.id = detail1.sku_id
   WHERE office1.id = so.id AND header1.order_type = 1 AND header1.`status` = 1 AND sku1.`status` = 1 AND
         NOT EXISTS(SELECT 1
                    FROM sys_test_account ta
                    WHERE header1.cust_id = ta.object_id AND ta.object_name = 'sys_office') AND
		(<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
		biz_status != #{item.state}
		</foreach>
		OR (biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
		AND header1.create_time BETWEEN #{startDate} AND #{endDate}
		AND date_format(oh.create_time, '%Y-%m') = date_format(header1.create_time, '%Y-%m')) AS buyPrice,
  CASE date_format(oh.create_time, '%Y-%m')
  WHEN '2017-06'
    THEN '2017-09'
  WHEN '2017-07'
    THEN '2017-10'
  WHEN '2017-08'
    THEN '2017-09'
  ELSE date_format(oh.create_time, '%Y-%m') END           createDate,
  so.id AS officeId,
  so.name AS name,
  so.type AS officeType,
		(SELECT region.name
		FROM sys_region AS region
		LEFT JOIN common_location AS location ON location.province_id = region.id
		LEFT JOIN sys_office_address AS oAddress ON oAddress.addr_id = location.id
		LEFT JOIN sys_office AS office  ON oAddress.office_id = office.id
		WHERE office.id = so.id AND oAddress.type = 2 limit 1) AS province,
		(SELECT
		SUM(bsi.base_price * s.stock_qty)
		FROM biz_inventory_info ii ,biz_inventory_sku s, biz_sku_info bsi
		WHERE ii.id = s.inv_id
		and bsi.id = s.sku_id
		and ii.`status` = 1
		and s.`status` = 1
		and bsi.`status` = 1
		AND ii.cust_id = so.id
		GROUP BY ii.cust_id) AS stockAmount
FROM sys_office so, biz_custom_center_consultant cc, sys_user u, biz_order_header oh
	WHERE cc.consultant_id = u.id AND oh.cust_id = cc.cust_id
		AND NOT EXISTS(SELECT 1 FROM sys_test_account ta WHERE oh.cust_id = ta.object_id  AND ta.object_name = 'sys_office')
		AND so.id = u.company_id
		AND so.type IN (8, 10, 11)
		AND
		(<foreach collection="statusList" index="index" item="item" open="(" separator="AND" close=")">
		biz_status != #{item.state}
	</foreach>
		OR (biz_status = ${@com.wanhutong.backend.modules.enums.OrderHeaderBizStatusEnum@DELETE.state} AND receive_total > 0))
      AND oh.`status` = 1 AND u.`status` = 1 AND cc.`status` = 1 AND so.id in
		(select id from sys_office where type IN (8, 10, 11) and status = 1)
		AND oh.create_time BETWEEN #{startDate} AND #{endDate}
		GROUP BY so.id

	</select>
</mapper>
