<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wanhutong.backend.modules.biz.dao.message.BizMessageOfficeTypeDao">
    
	<sql id="bizMessageOfficeTypeColumns">
		a.id AS "id",
		a.message_id AS "messageId",
		a.office_type AS "officeType",
		a.status AS "delFlag",
		a.create_id AS "createBy.id",
		a.create_time AS "createDate",
		a.u_version AS "uVersion",
		a.update_id AS "updateBy.id",
		a.update_time AS "updateDate"
	</sql>
	
	<sql id="bizMessageOfficeTypeJoins">
		LEFT JOIN biz_message_info bmi ON bmi.id = a.message_id
	</sql>
    
	<select id="get" resultType="BizMessageOfficeType">
		SELECT 
			<include refid="bizMessageOfficeTypeColumns"/>
		FROM biz_message_office_type a
		<include refid="bizMessageOfficeTypeJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="BizMessageOfficeType">
		SELECT 
			<include refid="bizMessageOfficeTypeColumns"/>
		FROM biz_message_office_type a
		<include refid="bizMessageOfficeTypeJoins"/>
		<where>
			a.status = #{DEL_FLAG_NORMAL}
			<if test="bizMessageInfo != null and bizMessageInfo.id != null">
				AND a.message_id = #{bizMessageInfo.id}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="BizMessageOfficeType">
		SELECT 
			<include refid="bizMessageOfficeTypeColumns"/>
		FROM biz_message_office_type a
		<include refid="bizMessageOfficeTypeJoins"/>
		<where>
			a.status = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO biz_message_office_type(
			id,
			message_id,
			office_type,
			status,
			create_id,
			create_time,
			u_version,
			update_id,
			update_time
		) VALUES (
			#{id},
			#{messageId},
			#{officeType},
			#{delFlag},
			#{createBy.id},
			#{createDate},
			#{uVersion},
			#{updateBy.id},
			#{updateDate}
		)
	</insert>
	
	<update id="update">
		UPDATE biz_message_office_type SET 	
			message_id = #{messageId},
			office_type = #{officeType},
			create_time = #{createDate},
			u_version = #{uVersion},
			update_id = #{updateBy.id},
			update_time = #{updateDate}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE biz_message_office_type SET 
			status = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

	<insert id="insertBatch">
		insert into biz_message_office_type (
		message_id,
		office_type,
		status,
		create_id,
		create_time,
		update_id,
		update_time
		) VALUES
		<foreach collection="officeTypeList" index="index" item="item" open="(" separator="),(" close=")">
			#{messageId},
			#{item},
			${@com.wanhutong.backend.common.persistence.BaseEntity@DEL_FLAG_NORMAL},
			#{userId},
			NOW(),
			#{userId},
			NOW()
		</foreach>
	</insert>
	
</mapper>