<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wanhutong.backend.modules.biz.dao.integration.BizMoneyRecodeDao">
    
	<sql id="bizMoneyRecodeColumns">
		a.id AS "id",
		a.office_id AS "office.id",
		o2.name as "office.name",
		o2.phone as "office.phone",
		u.name as "office.master",
		a.money AS "money",
		a.order_id AS "orderId",
		a.status_code AS "statusCode",
		a.status_name AS "statusName",
		a.comment AS "comment",
		a.status AS "status",
		a.create_id AS "createBy.id",
		a.create_time AS "createDate",
		a.update_id AS "updateBy.id",
		a.update_time AS "updateDate",
		a.u_version AS "uVersion"
	</sql>
	
	<sql id="bizMoneyRecodeJoins">
		LEFT JOIN sys_office o2 ON o2.id = a.office_id
	</sql>
	<sql id="sysUserJoins">
        LEFT JOIN sys_user u on u.id = o2.primary_person
	</sql>
    
	<select id="get" resultType="BizMoneyRecode">
		SELECT 
			<include refid="bizMoneyRecodeColumns"/>
		FROM biz_money_recode a
		<include refid="bizMoneyRecodeJoins"/>
		WHERE a.id = #{id}
	</select>

	<select id="selectRecodeDetail" resultType="com.wanhutong.backend.modules.biz.entity.integration.BizMoneyRecodeDetail">
		SELECT
		sum(CASE WHEN status_code IN (10, 11, 12, 22) THEN money ELSE 0 END ) AS gainIntegration,
		sum(CASE WHEN status_code IN (20, 21) THEN money ELSE 0 END) AS usedIntegration,
		sum(CASE WHEN CURRENT_DATE &lt; concat(YEAR(now()), '-07-01')
		AND status_code IN ('10', '11', '12', '22')
		AND update_time &lt; concat(YEAR(now()) - 1, '-01-01') THEN money
		WHEN CURRENT_DATE >= concat(YEAR(now()), '-07-01')
		AND status_code IN ('10', '11', '12', '22')
		AND update_time &lt; concat(YEAR(now()), '-01-01') THEN money ELSE 0 END) AS expireIntegration
		FROM
		biz_money_recode
	</select>
	
	<select id="findList" resultType="BizMoneyRecode">
		SELECT 
			<include refid="bizMoneyRecodeColumns"/>
		FROM biz_money_recode a
		<include refid="bizMoneyRecodeJoins"/>
		<include refid="sysUserJoins"/>
		<where>
			a.status = #{DEL_FLAG_NORMAL}
			<if test="statusName != null and statusName != ''">
				AND a.status_name = #{statusName}
			</if>
			<if test="office != null and office != ''">
				<if test="office.name != null and office.name != ''">
					AND o2.name = #{office.name}
				</if>
				<if test="office.phone != null and office.phone != ''">
					AND o2.phone like concat('%',#{office.phone},'%')
				</if>
			</if>
			<if test="beginCreateDate != null and endCreateDate != null and beginCreateDate != '' and endCreateDate != ''">
				AND a.create_time BETWEEN #{beginCreateDate} AND #{endCreateDate}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="BizMoneyRecode">
		SELECT 
			<include refid="bizMoneyRecodeColumns"/>
		FROM biz_money_recode a
		<include refid="bizMoneyRecodeJoins"/>
		<where>
			a.status = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO biz_money_recode(
			money
		) VALUES (
			#{money}
		)
	</insert>

	<insert id="saveAll" parameterType="list">
		insert into biz_money_recode(office_id,money,status_code,status_name,comment,status,create_id,create_time,update_id,update_time) values
		<foreach collection="list" item="item" index="index" separator=",">
			  (#{item.office.id},#{item.money},#{item.statusCode},#{item.statusName},#{item.comment},#{item.status},#{item.createId},#{item.createDate},
			  #{item.updateId},#{item.updateDate})
		</foreach>
	</insert>

	<update id="updateMoney" parameterType="list">
		update biz_cust_credit
		set money=
		<foreach collection="list" item="item" index="index"
				 separator=" " open="case office_id" close="end">
			when #{item.office.id} then #{item.newMoney}
		</foreach>
		where office_id in
		<foreach collection="list" index="index" item="item"
				 separator="," open="(" close=")">
			#{item.office.id,jdbcType=BIGINT}
		</foreach>
	</update>
	
	<update id="update">
		UPDATE biz_money_recode SET 	
			money = #{money},
			status_name = #{statusName},
			status = #{status}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE biz_money_recode SET 
			status = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
</mapper>